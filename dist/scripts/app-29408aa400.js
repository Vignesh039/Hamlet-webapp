!function(){"use strict";angular.module("consoles",["ngCookies","ngTouch","ngSanitize","ngResource","ui.bootstrap","ui.router","ui.grid","ngCsv","ngPrettyJson","ui.grid.exporter","zippr.config","ngFileUpload","angularUtils.directives.dirPagination","LocalStorageModule","angularModalService"])}(),angular.module("consoles").controller("NavbarController",["$rootScope","$scope","localStorageService","$state","ZIPPR_ENVIRONMENT","$http",function(e,t,o,s,a,r){"use strict";var n=o.get("userName");t.LoggedInUser=n;var i=o.get("userType");"hamlet_executive"===i?(t.loginMessage="Logged In Executive : ",t.Requests="MyRequests",t.newUser=!1):(t.loginMessage="Logged In Manager : ",t.Requests="Requests",t.newUser=!0),t.setTab=function(t){e.tab=t},t.isSet=function(o){return void 0===e.tab&&(e.tab=1),t.tab=e.tab,t.tab===o},t.logout=function(){var n=o.get("sessiontoken"),i={method:"POST",url:a.server+"hamlet/nadmin/user/logout",headers:{"Content-Type":"application/json","x-hamlet-api-key":a.apikey,"x-hamlet-sessiontoken":n}};r(i).success(function(a){a.ok===!0?(o.clearAll(),e.tab=1,s.go("login",{},{reload:!0})):t.message=a.error}).error(function(e){console.log(e,"error data")})}}]),angular.module("consoles").controller("UpdateController",["$scope","$http","ZIPPR_ENVIRONMENT","localStorageService","ModalService","$modal","Messages","$window",function(e,t,o,s,a,r,n,i){"use strict";function l(t){t.layers.eachLayer(function(t){var o=d.toGeoJSON(),s=JSON.stringify(o);e.storeDb=JSON.parse(s),n.setData(e.storeDb),e.show()})}e.cityList={},e.neiForm={},e.neiForm.city="Hyderabad",e.neiForm.district="Ranga Reddy",e.neiForm.state="Telangana",e.neiForm.country="India",e.cityList.city="NONE",e.showModal=!0;var c,d,u,p=s.get("sessiontoken");e.getCities=function(){var s={method:"Get",url:o.server+"hamlet/nadmin/neighbourhoods/cities",headers:{"Content-Type":"application/json","x-hamlet-api-key":o.apikey,"x-hamlet-sessiontoken":p}};t(s).success(function(t){t.ok===!0?e.citiesList=t.response:e.message=t.error}).error(function(e){console.log(e,"error data")}),L.mapbox.accessToken="pk.eyJ1IjoiYXZ1Y2hpIiwiYSI6InlIcWxFWWcifQ.JnJCwFkMDgCfdVrOuSXaWw#11/19.0644/72.9849";var a=L.latLng(17.20376982191752,78.38607788085938),r=L.latLng(17.60083012593064,78.5302734375),n=L.latLngBounds(a,r);e.map=L.mapbox.map("map","mapbox.streets",{maxBounds:n,maxZoom:19,minZoom:10}),e.map.setView([17.353044912613186,78.48209023475647],15),d=(new L.FeatureGroup).addTo(e.map),c=(new L.FeatureGroup).addTo(e.map),u=new L.Control.Draw({draw:{polyline:!1,polygon:!1,marker:!1,rectangle:!1,circle:!1},edit:{featureGroup:d},remove:!1});(new L.Control.Fullscreen).addTo(e.map);e.map.addControl(u),e.map.setView([17.353044912613186,78.48209023475647],12),e.map.on("draw:edited",l);for(var i=document.querySelectorAll(".leaflet-draw-edit-remove"),m=0;m<i.length;m++)i[m].style.visibility="hidden"},e.show=function(){var t=r.open({animation:!0,templateUrl:"confirmUpdate.html",controller:"Updatepolygon",resolve:{$modalInstance:function(){return function(){return t}}}});t.result.then(function(e){console.log(e,"response")},function(t){"success"===t?(e.createErrorMessage=!1,e.createMessage="Successfully Polygon updated"):(e.createMessage=!1,e.createErrorMessage=t)})},e.Alertshow=function(){var e=r.open({animation:!0,templateUrl:"Message.html",controller:"MessageDismiss",resolve:{$modalInstance:function(){return function(){return e}}}});e.result.then(function(e){},function(e){})},e.onCityChange=function(){if("NONE"!==e.cityList.city){e.onCity=!0,e.createMessage=!1,e.createErrorMessage=!1,d.clearLayers();var s={method:"GET",url:o.server+"hamlet/nadmin/neighbourhoods",headers:{"Content-Type":"application/json","x-hamlet-api-key":o.apikey,"x-hamlet-sessiontoken":p},params:{city:e.cityList.city}};t(s).success(function(t){if(t.ok===!0){var o=(t.response,{type:"FeatureCollection",features:[]});for(var s in t.response){var a=t.response[s],r={type:"Feature",id:a._id,properties:{name:a.name},geometry:a.geometry,enabled:a.enabled};o.features.push(r)}{L.geoJson(o,{onEachFeature:function(t,o){c.addLayer(o),t.enabled!==!1?o.on("dblclick",function(e){0===d.getLayers().length&&d.addLayer(e.target)}):o.on("dblclick",function(t){e.Alertshow()});var s=t.properties.name;o.bindPopup(s)},style:function(e){return e.enabled===!1?{fillColor:"#FF0000",color:"#FF0000",fillOpacity:.5}:{fillColor:"#4CAF50",color:"#008000",fillOpacity:.5}}})}}else e.message=t.error.reason})}if("HYD"===e.cityList.city){c.clearLayers();var a=L.latLng(17.147351748174778,78.2281494140625),r=L.latLng(17.709444568316783,78.6785888671875),n=L.latLngBounds(a,r);e.map.options.maxBounds=n,e.map.fitBounds(n)}if("BLR"===e.cityList.city){c.clearLayers();var a=L.latLng(12.846615538845874,77.50167846679688),r=L.latLng(13.092854552762695,77.64450073242188),n=L.latLngBounds(a,r);e.map.options.maxBounds=n,e.map.fitBounds(n)}if("DEL"===e.cityList.city){c.clearLayers();var a=L.latLng(28.41797549622403,76.86996459960938),r=L.latLng(28.881957139774222,77.24899291992188),n=L.latLngBounds(a,r);e.map.options.maxBounds=n,e.map.fitBounds(n)}}}]),angular.module("consoles").factory("Messages",function(){"use strict";var e={userName:"",sessionToken:"",userType:"",data:{}};return{getData:function(){return e.data},setData:function(t){e.data=t},getUserName:function(){return e.userName},setUserName:function(t){e.userName=t},getSessionToken:function(){return e.sessionToken},setSessionToken:function(t){e.sessionToken=t},getUserType:function(){return e.userType},setUserType:function(t){e.userType=t}}}),angular.module("consoles").controller("resendController",["$scope","$http","$state","ZIPPR_ENVIRONMENT","$location","localStorageService","ModalService","$modal","Messages",function(e,t,o,s,a,r,n,i,l){"use strict";function c(){e.idReport=a.resendObj,L.mapbox.accessToken="pk.eyJ1IjoiYXZ1Y2hpIiwiYSI6InlIcWxFWWcifQ.JnJCwFkMDgCfdVrOuSXaWw#11/19.0644/72.9849",e.map=L.mapbox.map("map","mapbox.streets");var t=e.idReport.geometry.coordinates[0][0];e.map.setView([t[1],t[0]],17),p=(new L.FeatureGroup).addTo(e.map),g=(new L.FeatureGroup).addTo(e.map),m=new L.Control.Draw({draw:{polyline:!1,polygon:!1,marker:!1,rectangle:!1,circle:!1},edit:{featureGroup:g}}),e.map.addControl(m);var o={type:"FeatureCollection",features:[]},s=e.idReport,r={type:"Feature",id:s._id,properties:{name:s.name},geometry:s.geometry};o.features.push(r);L.geoJson(o,{onEachFeature:function(e,t){g.addLayer(t);var o=e.properties.name;t.bindPopup(o)},style:function(e){return{fillColor:"#0000FF",color:"#0000FF",fillOpacity:.5}}});e.map.on("draw:edited",d);for(var n=document.querySelectorAll(".leaflet-draw-edit-remove"),i=0;i<n.length;i++)n[i].style.visibility="hidden";a.resendObj=void 0}function d(t){t.layers.eachLayer(function(t){var o=p.toGeoJSON(),s=JSON.stringify(o);e.storeDb=JSON.parse(s),l.setData(e.storeDb),e.show()})}function u(o){var a={method:"GET",url:s.server+"hamlet/nadmin/neighbourhoods",headers:{"Content-Type":"application/json","x-hamlet-api-key":s.apikey,"x-hamlet-sessiontoken":v},params:{city:o}};t(a).success(function(t){if(t.ok===!0){var o=(t.response,{type:"FeatureCollection",features:[]});for(var s in t.response){var a=t.response[s],r={type:"Feature",id:a._id,properties:{name:a.name},geometry:a.geometry,enabled:a.enabled};o.features.push(r)}{L.geoJson(o,{onEachFeature:function(e,t){p.addLayer(t);var o=e.properties.name;t.bindPopup(o)},style:function(e){return e.enabled===!1?{fillColor:"#FF0000",color:"#FF0000",fillOpacity:.5}:{fillColor:"#4CAF50",color:"#008000",fillOpacity:.5}}})}}else e.message=t.error.reason})}var p,m,g,v=r.get("sessiontoken");if(void 0===a.resendObj)o.go("requests");else{var h=String(a.resendObj.city);c(),u(h)}e.show=function(){var t=i.open({animation:!0,templateUrl:"resendpolygon.html",controller:"Resendpolygon",resolve:{$modalInstance:function(){return function(){return t}}}});t.result.then(function(e){console.log(e,"response")},function(t){"success"===t?(e.Errormessage=!1,e.createMessage="Successfully Polygon updated"):(e.createMessage=!1,e.Errormessage=t)})}}]),angular.module("consoles").controller("requestController",["$scope","localStorageService","$location","$state","ZIPPR_ENVIRONMENT","$http",function(e,t,o,s,a,r){"use strict";e.request={},e.request.stats="PENDING",e.pagination={perPage:20,currentPage:1,total:20};var n=t.get("userType");"hamlet_executive"===n?(e.actionBy=!1,e.userRole=!0):(e.actionBy=!0,e.userRole=!1),e.getRecords=function(){o.stat=e.request.stats,e.pagination.currentPage=1,e.getRequests(),console.log("call from getRecords")},e.getRequests=function(){e.pageChangeHandler(1),console.log("call from getRequests")},e.pageChangeHandler=function(s){console.log(s,"num called");var n;void 0!==o.stat?(n=o.stat,e.request.stats=o.stat):n=e.request.stats;var i,l=t.get("sessiontoken"),c=t.get("userType");i="hamlet_executive"===c?"hamlet/nadmin/neighbourhoods/myrequests":"hamlet/nadmin/neighbourhoods/requests";var d={method:"GET",url:a.server+i,headers:{"Content-Type":"application/json","x-hamlet-api-key":a.apikey,"x-hamlet-sessiontoken":l},params:{status:n,page_no:s,page_size:20}};"ALL"===n&&delete d.params.status,console.log(d,"req1"),r(d).success(function(t){t.ok===!0?(e.message=!1,e.stausReport=t.response.requests,e.pagination.total=t.response.total_count):e.message=t.error}).error(function(e){console.log(e,"error data")})},e.GotoViewpage=function(e){o.id=e.listzippr._id,o.stat=e.listzippr.status},e.Resendpage=function(t){o.resendObj=e.stausReport[t],s.go("resend")}}]),angular.module("consoles").controller("NeighbourController",["$scope","$http","ZIPPR_ENVIRONMENT","localStorageService","$state",function(e,t,o,s,a){"use strict";function r(t){t.layers.eachLayer(function(t){var o=d.toGeoJSON(),s=JSON.stringify(o);e.storeDb=JSON.parse(s),console.log(e.storeDb,"In osm map polygon edited")})}function n(t){d.addLayer(t.layer);var o=d.toGeoJSON(),s=JSON.stringify(o);e.storeDb=JSON.parse(s);for(var a=document.querySelectorAll(".leaflet-draw-draw-polygon"),r=0;r<a.length;r++)a[r].style.visibility="hidden";console.log("In osm map polygon created")}function i(t){var o=d.toGeoJSON(),s=JSON.stringify(o);e.storeDb=JSON.parse(s);for(var a=document.querySelectorAll(".leaflet-draw-draw-polygon"),r=0;r<a.length;r++)a[r].style.visibility="visible";console.log(e.storeDb,"In osm map polygon deleted")}e.cityList={},e.neiForm={},e.neiForm.country="India",e.cityList.city="NONE";var l,c,d,u=s.get("sessiontoken");e.getCities=function(){var s={method:"Get",url:o.server+"hamlet/nadmin/neighbourhoods/cities",headers:{"Content-Type":"application/json","x-hamlet-api-key":o.apikey,"x-hamlet-sessiontoken":u}};t(s).success(function(t,o,s,a){t.ok===!0?(e.citiesList=t.response,console.log(e.citiesList,"$scope.citiesList")):e.message=t.error}).error(function(e){console.log(e,"error data")}),L.mapbox.accessToken="pk.eyJ1IjoiYXZ1Y2hpIiwiYSI6InlIcWxFWWcifQ.JnJCwFkMDgCfdVrOuSXaWw#11/19.0644/72.9849";var a=L.latLng(17.20376982191752,78.38607788085938),p=L.latLng(17.60083012593064,78.5302734375),m=L.latLngBounds(a,p);e.map=L.mapbox.map("map","mapbox.streets",{maxBounds:m,maxZoom:19,minZoom:10}),c=(new L.FeatureGroup).addTo(e.map),d=(new L.FeatureGroup).addTo(e.map),l=new L.Control.Draw({draw:{polyline:!1,marker:!1,rectangle:!1,circle:!1},edit:{featureGroup:d}});(new L.Control.Fullscreen).addTo(e.map);e.map.addControl(l),e.map.setView([17.353044912613186,78.48209023475647],12),e.map.on("draw:created",n),e.map.on("draw:edited",r),e.map.on("draw:deleted",i)},e.createNewNeighbor=function(){if("NONE"!==e.cityList.city){var s=document.getElementById("cityList").selectedIndex;e.neiForm.city=e.citiesList[s].name,e.neiForm.state=e.citiesList[s].state,e.onCity=!0;var a={method:"GET",url:o.server+"hamlet/nadmin/neighbourhoods",headers:{"Content-Type":"application/json","x-hamlet-api-key":o.apikey,"x-hamlet-sessiontoken":u},params:{city:e.cityList.city}};t(a).success(function(t){if(t.ok===!0){var o=t.response;console.log(o.length,"data from server");var s={type:"FeatureCollection",features:[]};for(var a in t.response){var r=t.response[a],n={type:"Feature",properties:{name:r.name},geometry:r.geometry,enabled:r.enabled};s.features.push(n)}{L.geoJson(s,{onEachFeature:function(e,t){c.addLayer(t);var o=e.properties.name;t.bindPopup(o)},style:function(e){return e.enabled===!1?{fillColor:"#FF0000",color:"#FF0000",fillOpacity:.5}:{fillColor:"#4CAF50",color:"#008000",fillOpacity:.5}}})}}else e.message=t.error.reason})}else e.onCity=!1;if("HYD"===e.cityList.city){c.clearLayers();var r=L.latLng(17.147351748174778,78.2281494140625),n=L.latLng(17.709444568316783,78.6785888671875),i=L.latLngBounds(r,n);e.map.options.maxBounds=i,e.map.fitBounds(i)}if("BLR"===e.cityList.city){c.clearLayers();var r=L.latLng(12.846615538845874,77.50167846679688),n=L.latLng(13.092854552762695,77.64450073242188),i=L.latLngBounds(r,n);e.map.options.maxBounds=i,e.map.fitBounds(i)}if("DEL"===e.cityList.city){c.clearLayers();var r=L.latLng(28.41797549622403,76.86996459960938),n=L.latLng(28.881957139774222,77.24899291992188),i=L.latLngBounds(r,n);e.map.options.maxBounds=i,e.map.fitBounds(i)}},e.createNeighbour=function(){if("object"==typeof e.storeDb){var s={method:"POST",url:o.server+"hamlet/nadmin/neighbourhoods/add",headers:{"Content-Type":"application/json","x-hamlet-api-key":o.apikey,"x-hamlet-sessiontoken":u},data:{city:e.cityList.city,name:e.neiForm.area,properties:{locality:e.neiForm.locality,subLocalit:e.neiForm.sublocality,city:e.neiForm.city,district:e.neiForm.district,state:e.neiForm.state,country:e.neiForm.country},geometry:e.storeDb.features[0].geometry}};t(s).success(function(t){t.ok===!0?(e.createErrorMessage=!1,e.createMessage="Successfully Polygon Created",e.neiForm.sub=!0,e.map.removeControl(l)):(e.createMessage=!1,e.createErrorMessage=t.error.reason)}).error(function(e){console.log(e,"error data")})}else e.createErrorMessage="Draw new Polygon on Map Then save"},e.RefreshNeighbor=function(){console.log("refreshed"),a.go("neighbours",{},{reload:!0})}}]),angular.module("consoles").controller("MessageDismiss",["$scope","$http","$modalInstance","localStorageService","ZIPPR_ENVIRONMENT","Messages",function(e,t,o,s,a,r){"use strict";e.userConfirmation=function(e){o().dismiss("No")}}]),angular.module("consoles").controller("MainController",["$scope","$resource","$http","localStorageService","ZIPPR_ENVIRONMENT",function(e,t,o,s,a,r){"use strict";e.accForm={},e.accForm.utype="hamlet_executive",e.accForm.city="HYD",e.myValue=!0;var n=s.get("sessiontoken");e.getCities=function(){var t={method:"Get",url:a.server+"hamlet/nadmin/neighbourhoods/cities",headers:{"Content-Type":"application/json","x-hamlet-api-key":a.apikey,"x-hamlet-sessiontoken":n}};o(t).success(function(t){t.ok===!0?(e.citiesList=t.response,console.log(e.citiesList,"Cities list")):e.message=t.error.reason}).error(function(t){e.message="Page not Found"})},e.userTypeSelction=function(){e.myValue="hamlet_executive"===e.accForm.utype?!0:!1},e.createAccount=function(){console.log("createAccount");var t={};t.email=e.accForm.uname,t.password=e.accForm.pwd,t.user_type=e.accForm.utype,"hamlet_executive"===e.accForm.utype&&(t.cities=e.accForm.city);var s={method:"POST",url:a.server+"/hamlet/nadmin/user",headers:{"Content-Type":"application/json","x-hamlet-api-key":a.apikey,"x-hamlet-sessiontoken":n},data:t};o(s).success(function(t){t.ok===!0?(e.createErrorMessage=!1,e.createMessage="User Created successfully",e.submitbtn=!0):(e.createMessage=!1,e.createErrorMessage=t.error.reason)}).error(function(t){e.createErrorMessage="Page Not Found"})}}]),angular.module("consoles").controller("LoginController",["$rootScope","$scope","$cookies","$state","localStorageService","$http","ZIPPR_ENVIRONMENT",function(e,t,o,s,a,r,n){"use strict";t.login=function(e){var o={method:"POST",url:n.server+"hamlet/nadmin/user/login",headers:{"Content-Type":"application/json","x-hamlet-api-key":n.apikey},data:{username:t.userName,password:t.password}};r(o).success(function(e,o,r,n){e.ok===!0?(a.set("userName",e.response.username),a.set("sessiontoken",e.response["x-hamlet-sessiontoken"]),a.set("userType",e.response.user_type),s.go("requests",{},{reload:!0})):t.message=e.error.reason}).error(function(e){t.message="Page Not Found"})},t.passWordForm=function(){var e=a.get("userName");t.userName=e},t.ChangePass=function(e){var o=a.get("sessiontoken"),s={method:"POST",url:n.server+"hamlet/nadmin/user/password/change",headers:{"Content-Type":"application/json","x-hamlet-api-key":n.apikey,"x-hamlet-sessiontoken":o},data:{existing_password:t.oldpassword,new_password:t.newpassword}};r(s).success(function(e){e.ok===!0?(t.message="passwordword Changed Successfully",t.submitbtn=!0,a.clearAll()):t.loginstatus=e.error.reason}).error(function(e){t.message="Page Not Found"})}}]),angular.module("consoles").controller("GetUserController",["$scope","$resource","$http","localStorageService","ZIPPR_ENVIRONMENT",function(e,t,o,s,a,r){"use strict";var n=s.get("sessiontoken");e.userDes={},e.getCities=function(){var t={method:"Get",url:a.server+"hamlet/nadmin/neighbourhoods/cities",headers:{"Content-Type":"application/json","x-hamlet-api-key":a.apikey,"x-hamlet-sessiontoken":n}};o(t).success(function(t){t.ok===!0?(e.citiesList=t.response,console.log(e.citiesList,"Cities list")):e.message=t.error.reason}).error(function(t){e.message="Page not Found"})},e.getuserDetails=function(){e.userDes={},e.createMessage=!1,e.updateErrorMessage=!1,e.updatecreateMessage=!1;var t={method:"GET",url:a.server+"hamlet/nadmin/user/details",headers:{"Content-Type":"application/json","x-hamlet-api-key":a.apikey,"x-hamlet-sessiontoken":n},params:{username:e.userEmail}};o(t).success(function(t){if(t.ok===!0){if("hamlet_executive"==t.response.user_type||"hamlet_manager"==t.response.user_type)e.userDes=t.response;else if(e.userDes=t.response,t.response.user_type.length>0)for(var o=0;o<t.response.user_type.length;o++)("hamlet_executive"==t.response.user_type[o]||"hamlet_manager"==t.response.user_type[o])&&(e.userDes.user_type=t.response.user_type[o]);else e.userDes.user_type="null";e.createErrorMessage=!1,e.createMessage="User Created successfully"}else e.createMessage=!1,e.createErrorMessage=t.error.reason}).error(function(t){e.createErrorMessage="Page Not Found"})},e.UpdateUserAccount=function(){if(console.log(e.userDes.user_type,"update fired"),"null"!==e.userDes.user_type){var t={};t.user_type=e.userDes.user_type,"hamlet_executive"===e.userDes.user_type&&(t.cities=e.userDes.cities);var s={method:"PUT",url:a.server+"hamlet/nadmin/user/"+e.userDes._id,headers:{"Content-Type":"application/json","x-hamlet-api-key":a.apikey,"x-hamlet-sessiontoken":n},data:t};o(s).success(function(t){t.ok===!0?(e.updateErrorMessage=!1,e.updatecreateMessage="UserAccount Updated successfully"):(e.updatecreateMessage=!1,e.updateErrorMessage=t.error.reason)}).error(function(t){e.updateErrorMessage="Page Not Found"})}else e.updateErrorMessage="Select userType"}}]),angular.module("consoles").controller("EnableController",["$scope","$http","ZIPPR_ENVIRONMENT","localStorageService","ModalService","$modal","Messages",function(e,t,o,s,a,r,n){"use strict";e.cityList={},e.cityList.city="NONE";var i,l=s.get("sessiontoken");e.getCities=function(){var s={method:"Get",url:o.server+"hamlet/nadmin/neighbourhoods/cities",headers:{"Content-Type":"application/json","x-hamlet-api-key":o.apikey,"x-hamlet-sessiontoken":l}};t(s).success(function(t){t.ok===!0?e.citiesList=t.response:e.message=t.error}).error(function(e){console.log(e,"error data")}),L.mapbox.accessToken="pk.eyJ1IjoiYXZ1Y2hpIiwiYSI6InlIcWxFWWcifQ.JnJCwFkMDgCfdVrOuSXaWw#11/19.0644/72.9849";var a=L.latLng(17.20376982191752,78.38607788085938),r=L.latLng(17.60083012593064,78.5302734375),n=L.latLngBounds(a,r);e.map=L.mapbox.map("map","mapbox.streets",{maxBounds:n,maxZoom:19,minZoom:10});(new L.Control.Fullscreen).addTo(e.map);e.map.setView([17.353044912613186,78.48209023475647],15),i=(new L.FeatureGroup).addTo(e.map),e.map.setView([17.353044912613186,78.48209023475647],12)},e.show=function(){var t=r.open({animation:!0,templateUrl:"confirmEnable.html",controller:"Enablepolygon",resolve:{$modalInstance:function(){return function(){return t}}}});t.result.then(function(e){console.log(e,"response")},function(t){"success"===t?(e.createErrorMessage=!1,e.createMessage="Polygon Enabled Successfully"):(e.createMessage=!1,e.createErrorMessage=t)})},e.onCityChange=function(){if("NONE"!==e.cityList.city){e.onCity=!0,e.createMessage=!1,e.createErrorMessage=!1;var s={method:"GET",url:o.server+"hamlet/nadmin/neighbourhoods/disabled",headers:{"Content-Type":"application/json","x-hamlet-api-key":o.apikey,"x-hamlet-sessiontoken":l},params:{city:e.cityList.city}};t(s).success(function(t){if(t.ok===!0){e.createErrorMessage=!1;var o=t.response;console.log(o,"from enable call ");var s={type:"FeatureCollection",features:[]};for(var a in t.response){var r=t.response[a],l={type:"Feature",id:r._id,properties:{name:r.name},geometry:r.geometry,enabled:r.enabled};s.features.push(l)}{L.geoJson(s,{onEachFeature:function(t,o){i.addLayer(o),o.on("dblclick",function(t){var o=t.target.toGeoJSON(),s=JSON.stringify(o);e.storeDb=JSON.parse(s),n.setData(e.storeDb),e.show()});var s=t.properties.name;o.bindPopup(s)},style:function(e){return e.enabled===!1?{fillColor:"#FF0000",color:"#FF0000",fillOpacity:.5}:{fillColor:"#4CAF50",color:"#008000",fillOpacity:.5}}})}}else e.createErrorMessage=t.error.reason})}if("HYD"===e.cityList.city){i.clearLayers();var a=L.latLng(17.147351748174778,78.2281494140625),r=L.latLng(17.709444568316783,78.6785888671875),c=L.latLngBounds(a,r);e.map.options.maxBounds=c,e.map.fitBounds(c)}if("BLR"===e.cityList.city){i.clearLayers();var a=L.latLng(12.846615538845874,77.50167846679688),r=L.latLng(13.092854552762695,77.64450073242188),c=L.latLngBounds(a,r);e.map.options.maxBounds=c,e.map.fitBounds(c)}if("DEL"===e.cityList.city){i.clearLayers();var a=L.latLng(28.41797549622403,76.86996459960938),r=L.latLng(28.881957139774222,77.24899291992188),c=L.latLngBounds(a,r);e.map.options.maxBounds=c,e.map.fitBounds(c)}}}]),angular.module("consoles").controller("editController",["$scope","$location","localStorageService","$state","ZIPPR_ENVIRONMENT","$http",function(e,t,o,s,a,r){"use strict";function n(){var s=o.get("userType");e.Managers="PENDING"===t.stat&&"hamlet_manager"===s?!0:!1,L.mapbox.accessToken="pk.eyJ1IjoiYXZ1Y2hpIiwiYSI6InlIcWxFWWcifQ.JnJCwFkMDgCfdVrOuSXaWw#11/19.0644/72.9849",e.map=L.mapbox.map("map","mapbox.streets");var a=e.idReport.geometry.coordinates[0][0];e.map.setView([a[1],a[0]],17);var r=((new L.Control.Fullscreen).addTo(e.map),(new L.FeatureGroup).addTo(e.map)),n={type:"FeatureCollection",features:[]};for(var i in e.idReport){var l=e.idReport,c={type:"Feature",id:l._id,properties:{name:l.name},geometry:l.geometry};n.features.push(c)}L.geoJson(n,{onEachFeature:function(e,t){r.addLayer(t);var o=e.properties.name;t.bindPopup(o)},style:function(e){return{fillColor:"#008000",color:"#008000",fillOpacity:.1}}})}var i=o.get("sessiontoken");console.log(t.id,t.stat,"$location");var l={method:"GET",url:a.server+"hamlet/nadmin/neighbourhoods/request/"+String(t.id),headers:{"Content-Type":"application/json","x-hamlet-api-key":a.apikey,"x-hamlet-sessiontoken":i}};r(l).success(function(t){t.ok===!0?(e.message=!1,e.idReport=t.response,n()):e.message=t.error.reason}).error(function(t,o){e.message=o+" Page Not Found"}),e.onApprove=function(){var o={method:"POST",url:a.server+"hamlet/nadmin/neighbourhoods/approve",headers:{"Content-Type":"application/json","x-hamlet-api-key":a.apikey,"x-hamlet-sessiontoken":i},data:{neighbourhood_draft_id:String(t.id)}};r(o).success(function(t){t.ok===!0?(e.errormessage=!1,e.acted=!0,e.sucessmessage="New hamlet Approved"):(e.sucessmessage=!1,e.errormessage=t.error.reason)}).error(function(t,o){e.errormessage=o+" Page Not Found"})},e.onReject=function(){console.log("request rejected");var o={method:"POST",url:a.server+"hamlet/nadmin/neighbourhoods/reject",headers:{"Content-Type":"application/json","x-hamlet-api-key":a.apikey,"x-hamlet-sessiontoken":i},data:{neighbourhood_draft_id:String(t.id)}};r(o).success(function(t){t.ok===!0?(e.errormessage=!1,e.acted=!0,e.sucessmessage="New hamlet Rejected"):(e.sucessmessage=!1,e.errormessage=t.error.reason)}).error(function(t,o){e.errormessage=o+" Page Not Found"})}}]),angular.module("consoles").controller("DisableController",["$scope","$http","ZIPPR_ENVIRONMENT","localStorageService","ModalService","$modal","Messages",function(e,t,o,s,a,r,n){"use strict";function i(t){t.layers.eachLayer(function(t){var o=t.toGeoJSON(),s=JSON.stringify(o);e.storeDb=JSON.parse(s),n.setData(e.storeDb),e.show()})}e.cityList={},e.cityList.city="NONE";var l,c,d,u=s.get("sessiontoken");e.getCities=function(){var s={method:"Get",url:o.server+"hamlet/nadmin/neighbourhoods/cities",headers:{"Content-Type":"application/json","x-hamlet-api-key":o.apikey,"x-hamlet-sessiontoken":u}};t(s).success(function(t){t.ok===!0?e.citiesList=t.response:e.message=t.error}).error(function(e){console.log(e,"error data")}),L.mapbox.accessToken="pk.eyJ1IjoiYXZ1Y2hpIiwiYSI6InlIcWxFWWcifQ.JnJCwFkMDgCfdVrOuSXaWw#11/19.0644/72.9849";var a=L.latLng(17.20376982191752,78.38607788085938),r=L.latLng(17.60083012593064,78.5302734375),n=L.latLngBounds(a,r);e.map=L.mapbox.map("map","mapbox.streets",{maxBounds:n,maxZoom:19,minZoom:10}),e.map.setView([17.353044912613186,78.48209023475647],15),c=(new L.FeatureGroup).addTo(e.map),l=(new L.FeatureGroup).addTo(e.map),d=new L.Control.Draw({draw:{polyline:!1,polygon:!1,marker:!1,rectangle:!1,circle:!1},edit:{featureGroup:c},remove:!1});(new L.Control.Fullscreen).addTo(e.map);e.map.setView([17.353044912613186,78.48209023475647],12),e.map.on("draw:deleted",i);for(var p=document.querySelectorAll(".leaflet-draw-edit-edit"),m=0;m<p.length;m++)p[m].style.visibility="hidden"},e.show=function(){var t=r.open({animation:!0,templateUrl:"confirmDisable.html",controller:"Disablepolygon",resolve:{$modalInstance:function(){return function(){return t}}}});t.result.then(function(e){console.log(e,"response")},function(t){"success"===t?(e.createErrorMessage=!1,e.createMessage="Polygon Disabled Successfully"):(e.createMessage=!1,e.createErrorMessage=t)})},e.Alertshow=function(){var e=r.open({animation:!0,templateUrl:"Message.html",controller:"MessageDismiss",resolve:{$modalInstance:function(){return function(){return e}}}});e.result.then(function(e){},function(e){})},e.onCityChange=function(){if("NONE"!==e.cityList.city){e.onCity=!0,e.createMessage=!1,e.createErrorMessage=!1,c.clearLayers();var s={method:"GET",url:o.server+"hamlet/nadmin/neighbourhoods",headers:{"Content-Type":"application/json","x-hamlet-api-key":o.apikey,"x-hamlet-sessiontoken":u},params:{city:e.cityList.city}};t(s).success(function(t){if(t.ok===!0){var o=(t.response,{type:"FeatureCollection",features:[]});for(var s in t.response){var a=t.response[s],r={type:"Feature",id:a._id,properties:{name:a.name},geometry:a.geometry,enabled:a.enabled};o.features.push(r)}{L.geoJson(o,{onEachFeature:function(t,o){l.addLayer(o),t.enabled!==!1?o.on("dblclick",function(t){var o=t.target.toGeoJSON(),s=JSON.stringify(o);e.storeDb=JSON.parse(s),n.setData(e.storeDb),e.show()}):o.on("dblclick",function(t){e.Alertshow()});var s=t.properties.name;o.bindPopup(s)},style:function(e){return e.enabled===!1?{fillColor:"#FF0000",color:"#FF0000",fillOpacity:.5}:{fillColor:"#4CAF50",color:"#008000",fillOpacity:.5}}})}}else e.message=t.error.reason})}if("HYD"===e.cityList.city){l.clearLayers();var a=L.latLng(17.147351748174778,78.2281494140625),r=L.latLng(17.709444568316783,78.6785888671875),i=L.latLngBounds(a,r);e.map.options.maxBounds=i,e.map.fitBounds(i)}if("BLR"===e.cityList.city){l.clearLayers();var a=L.latLng(12.846615538845874,77.50167846679688),r=L.latLng(13.092854552762695,77.64450073242188),i=L.latLngBounds(a,r);e.map.options.maxBounds=i,e.map.fitBounds(i)}if("DEL"===e.cityList.city){l.clearLayers();var a=L.latLng(28.41797549622403,76.86996459960938),r=L.latLng(28.881957139774222,77.24899291992188),i=L.latLngBounds(a,r);e.map.options.maxBounds=i,e.map.fitBounds(i)}}}]),angular.module("consoles").controller("Updatepolygon",["$scope","$http","$modalInstance","localStorageService","ZIPPR_ENVIRONMENT","Messages",function(e,t,o,s,a,r){"use strict";var n=r.getData(),i=s.get("sessiontoken");e.polygonName=n.features[0].properties.name,e.userConfirmation=function(t){"Yes"===t?e.updateNeighbour():o().dismiss("Polygon Not updated")},e.updateNeighbour=function(){var e={method:"POST",url:a.server+"hamlet/nadmin/neighbourhoods/update",headers:{"Content-Type":"application/json","x-hamlet-api-key":a.apikey,"x-hamlet-sessiontoken":i},data:{geometry:n.features[0].geometry,neighbourhood_id:n.features[0].id}};t(e).success(function(e){o().dismiss(e.ok===!0?"success":e.error.reason)}).error(function(e){o().dismiss(e)})}}]),angular.module("consoles").controller("Resendpolygon",["$scope","$http","$modalInstance","localStorageService","ZIPPR_ENVIRONMENT","Messages",function(e,t,o,s,a,r){"use strict";var n=r.getData(),i=s.get("sessiontoken");e.polygonName=n.features[0].properties.name,e.userConfirmation=function(t){"Yes"===t?e.updateNeighbour():o().dismiss("Resendpolygon Rejected")},e.updateNeighbour=function(){var e={method:"POST",url:a.server+"/hamlet/nadmin/neighbourhoods/resend",headers:{"Content-Type":"application/json","x-hamlet-api-key":a.apikey,"x-hamlet-sessiontoken":i},data:{geometry:n.features[0].geometry,neighbourhood_draft_id:n.features[0].id}};t(e).success(function(e){o().dismiss(e.ok===!0?"success":e.error.reason)}).error(function(e){o().dismiss(e)})}}]),angular.module("consoles").controller("Enablepolygon",["$scope","$http","$modalInstance","localStorageService","ZIPPR_ENVIRONMENT","Messages",function(e,t,o,s,a,r){"use strict";var n=r.getData();console.log(n,"from disable ");var i=s.get("sessiontoken");e.polygonName=n.properties.name,e.userConfirmation=function(t){"Yes"===t?e.disableNeighbour():o().dismiss("Polygon Not Enabled")},e.disableNeighbour=function(){var e={method:"POST",url:a.server+"hamlet/nadmin/neighbourhoods/enable",headers:{"Content-Type":"application/json","x-hamlet-api-key":a.apikey,"x-hamlet-sessiontoken":i},data:{neighbourhood_id:n.id}};t(e).success(function(e){o().dismiss(e.ok===!0?"success":e.error.reason)}).error(function(e){o().dismiss(e)})}}]),angular.module("consoles").controller("Disablepolygon",["$scope","$http","$modalInstance","localStorageService","ZIPPR_ENVIRONMENT","Messages",function(e,t,o,s,a,r){"use strict";var n=r.getData();console.log(n,"from disable ");var i=s.get("sessiontoken");e.polygonName=n.properties.name,e.userConfirmation=function(t){"Yes"===t?e.disableNeighbour():o().dismiss("Polygon Not Disabled")},e.disableNeighbour=function(){var e={method:"POST",url:a.server+"hamlet/nadmin/neighbourhoods/disable",headers:{"Content-Type":"application/json","x-hamlet-api-key":a.apikey,"x-hamlet-sessiontoken":i},data:{neighbourhood_id:n.id}};t(e).success(function(e){o().dismiss(e.ok===!0?"success":e.error.reason)}).error(function(e){o().dismiss(e)})}}]),function(){"use strict";function e(e,t,o,s,a){t.debug("runBlock end"),e.$on("$stateChangeError",function(e,t,s,a,r,n){o.go("login")})}e.$inject=["$rootScope","$log","$state","$http","localStorageService"],angular.module("consoles").run(e)}(),function(){"use strict";function e(e,t){e.state("login",{url:"/login",templateUrl:"app/main/login.html",controller:"LoginController"}).state("requests",{url:"/requests",templateUrl:"app/main/requests.html",controller:"requestController",resolve:{status:["AuthService",function(e){return e.getStatus()}]}}).state("neighbours",{url:"/neighbours",templateUrl:"app/main/neighbours.html",controller:"NeighbourController",resolve:{status:["AuthService",function(e){return e.getStatus()}]}}).state("update",{url:"/update",templateUrl:"app/main/update.html",controller:"UpdateController",resolve:{status:["AuthService",function(e){return e.getStatus()}]}}).state("disable",{url:"/disable",templateUrl:"app/main/disable.html",
controller:"DisableController",resolve:{status:["AuthService",function(e){return e.getStatus()}]}}).state("enable",{url:"/enable",templateUrl:"app/main/enable.html",controller:"EnableController",resolve:{status:["AuthService",function(e){return e.getStatus()}]}}).state("edit",{url:"/edit",templateUrl:"app/main/edit.html",controller:"editController",resolve:{status:["AuthService",function(e){return e.getStatus()}]}}).state("resend",{url:"/resend",templateUrl:"app/main/resend.html",controller:"resendController",resolve:{status:["AuthService",function(e){return e.getStatus()}]}}).state("createUser",{url:"/createUser",templateUrl:"app/main/createUser.html",controller:"MainController",resolve:{status:["AuthService",function(e){return e.getStatus()}]}}).state("getUser",{url:"/getUser",templateUrl:"app/main/getUser.html",controller:"GetUserController",resolve:{status:["AuthService",function(e){return e.getStatus()}]}}).state("password",{url:"/password",templateUrl:"app/main/password.html",controller:"LoginController",resolve:{status:["AuthService",function(e){return e.getStatus()}]}}),t.otherwise("/login")}e.$inject=["$stateProvider","$urlRouterProvider"],angular.module("consoles").config(e)}(),function(){"use strict";angular.module("consoles").constant("zippr_server","http://qa.zip.pr/")}(),function(){"use strict";function e(e,t){e.debugEnabled(!0)}e.$inject=["$logProvider","$httpProvider"],angular.module("consoles").config(e)}(),angular.module("zippr.config",[]).constant("ZIPPR_ENVIRONMENT",{server:"http://hamletqa.zip.pr/",apikey:"d338667c0196254de1922668f5b1344ba80e54fd0ef481f09cef5336b6471a99"}),angular.module("consoles").service("AuthService",["$q","$state","localStorageService",function(e,t,o){"use strict";return{getStatus:function(){var s=e.defer(),a=o.get("userName");return""!==a&&null!==a?s.resolve({name:"Success"}):(s.reject(),o.clearAll(),$rootScope.tab=1,t.go("login")),s.promise}}}]),angular.module("consoles").run(["$templateCache",function(e){e.put("app/main/createUser.html",'<div class="container-fluid"><div ng-include="\'app/components/navbar/navbar.html\'"></div><div class="page-header" align="center"><h3 style="color: chocolate;">Creative New Users</h3></div><div align="center" class="row" style="width:50%;" id="form-details" ng-init="getCities();"><form ng-submit="createAccount()" autocomplete="off"><div class="form-group"><p style="color:red; text-align:center;">{{accountstatus}}</p></div><div class="form-group row"><div class="col-md-6"><label>User Name:</label></div><div class="col-md-6"><input type="email" ng-model="accForm.uname" class="form-control" placeholder="user email id" name="username" value="" required=""></div></div><div class="form-group row"><div class="col-md-6"><label>Password:</label></div><div class="col-md-6"><input type="password" ng-model="accForm.pwd" class="form-control" placeholder="password" value="" required=""></div></div><div class="form-group row" style="margin-top:10px;"><div class="col-md-6"><label>UserType:</label></div><div class="col-md-6"><select name="singleSelect" ng-model="accForm.utype" class="form-control" required="" ng-change="userTypeSelction();"><option value="hamlet_executive">Executive</option><option value="hamlet_manager">Manager</option></select></div></div><div class="form-group row" style="margin-top:10px;" ng-show="myValue"><div class="col-md-6"><label>City Name:</label></div><div class="col-md-6"><select ng-model="accForm.city" multiple="true" class="form-control"><option ng-repeat="cities in citiesList" value="{{cities.code}}">{{cities.name}}</option></select></div></div><div class="form-group row"><div ng-show="createMessage" class="alert alert-success col-md-6" style="float:right;">{{ createMessage }}</div><div ng-show="createErrorMessage" class="alert alert-danger col-md-6" style="float:right;">{{ createErrorMessage }}</div></div><div class="form-group row"><div class="col-md-6" style="float:right;"><button class="btn btn-lg btn-primary btn-block" type="submit" ng-disabled="submitbtn">Create User</button></div></div></form></div></div>'),e.put("app/main/disable.html",'<div class="container-fluid"><div ng-include="\'app/components/navbar/navbar.html\'"></div><div class="page-header" align="center"><h3 style="color: chocolate;">Disable Neighbourhood</h3></div><div ng-init="getCities();"><div class="form-inline"><div class="form-group"><label>Select City Name:</label><select ng-model="cityList.city" class="form-control" required="" ng-change="onCityChange()"><option ng-repeat="cities in citiesList" value="{{cities.code}}">{{cities.name}}</option><option value="NONE">Select City</option></select></div><div ng-show="createErrorMessage" class="alert alert-danger form-group">{{ createErrorMessage }}</div><div ng-show="createMessage" class="alert alert-success form-group">{{ createMessage }}</div><div class="form-group" style="float:right;"><label class="color-box" style="background-color: #FF0000;"></label> <span style="margin-left:10px;">Disabled Neighbours</span></div><div class="form-group" style="float:right;"><label class="color-box" style="background-color: #4CAF50;"></label> <span style="margin-left:10px;">Active Neighbours</span></div></div></div><div class="alert alert-info" align="center" ng-show="onCity"><h5 style="color: crimson;">Double click on the polygon what you want to disable</h5></div><div style="width:100%;height:600px;border:1px solid;" ng-show="onCity"><div id="map"></div></div><div></div><script type="text/ng-template" id="confirmDisable.html"><div class="modal-header"> <h3 class="modal-title">Confirmation Required ?</h3> </div> <div class="modal-body"> <span>Are You Sure Want To Disable polygon of <b>{{polygonName}}?</b> </div> <div class="modal-footer"> <button type="button" ng-click="userConfirmation(\'No\')" class="btn btn-default" data-dismiss="modal">No</button> <button type="button" ng-click="userConfirmation(\'Yes\')" class="btn btn-primary" data-dismiss="modal">Yes</button> </div></script><script type="text/ng-template" id="Message.html"><div class="modal-header"> <button type="button" class="close" data-dismiss="modal" ng-click="userConfirmation(\'No\')">&times;</button> <h3 class="modal-title">Warning Message</h3> </div> <div class="modal-body"> <span>Disabled polygons are not editable </span> </div> <div class="modal-footer"> <br/> </div></script></div>'),e.put("app/main/edit.html",'<div class="container-fluid"><div ng-include="\'app/components/navbar/navbar.html\'"></div><div class="page-header" align="center"><h3 style="color: chocolate;">Neighbourhood Details</h3></div><div class="row" style="margin:20px"><a ui-sref="requests">Back</a></div><div class="row"><div ng-show="message" class="alert alert-danger">{{ message }}</div></div><div align="center" class="row"><table><tr><th>Request Id</th><th>Area Name</th><th>Action By</th><th>Status</th><th>Action</th><th>Acted By</th><th>Acted At</th></tr><tr><td>{{idReport._id}}</td><td>{{idReport.name}}</td><td>{{idReport.action_by}}</td><td>{{idReport.status}}</td><td>{{idReport.action}}</td><td>{{idReport.acted_by}}</td><td>{{idReport.acted_at| date:\'medium\'}}</td></tr></table><div ng-show="Managers" style="margin-top:15px;"><div ng-show="errormessage" class="alert alert-danger">{{ errormessage }}</div><div ng-show="sucessmessage" class="alert alert-success">{{ sucessmessage }}</div><button class="btn btn-success" ng-click="onApprove();" ng-disabled="acted">Approve</button> <button class="btn btn-danger" ng-click="onReject();" ng-disabled="acted">Reject</button></div></div><div style="width:100%;height:600px;border:1px solid;margin-top:15px;"><div id="map"></div></div></div>'),e.put("app/main/enable.html",'<div class="container-fluid"><div ng-include="\'app/components/navbar/navbar.html\'"></div><div class="page-header" align="center"><h3 style="color: chocolate;">Enable Neighbourhood</h3></div><div ng-init="getCities();"><div class="form-inline"><div class="form-group"><label>Select City Name:</label><select ng-model="cityList.city" class="form-control" required="" ng-change="onCityChange()"><option ng-repeat="cities in citiesList" value="{{cities.code}}">{{cities.name}}</option><option value="NONE">Select City</option></select></div><div ng-show="createErrorMessage" class="alert alert-danger form-group">{{ createErrorMessage }}</div><div ng-show="createMessage" class="alert alert-success form-group">{{ createMessage }}</div></div></div><div class="alert alert-info" role="alert" align="center" ng-show="onCity"><h5 style="color: crimson;">Double click on the polygon what you want to enable</h5></div><div style="width:100%;height:600px;border:1px solid;" ng-show="onCity"><div id="map"></div></div><div></div><script type="text/ng-template" id="confirmEnable.html"><div class="modal-header"> <h3 class="modal-title">Confirmation Required ?</h3> </div> <div class="modal-body"> <span>Are You Sure Want To Enable polygon of <b>{{polygonName}}?</b> </div> <div class="modal-footer"> <button type="button" ng-click="userConfirmation(\'No\')" class="btn btn-default" data-dismiss="modal">No</button> <button type="button" ng-click="userConfirmation(\'Yes\')" class="btn btn-primary" data-dismiss="modal">Yes</button> </div></script></div>'),e.put("app/main/getUser.html",'<div class="container-fluid"><div ng-include="\'app/components/navbar/navbar.html\'"></div><div class="page-header" align="center"><h3 style="color: chocolate;">Users Details</h3></div><div ng-show="createErrorMessage" class="alert alert-danger form-group">{{ createErrorMessage }}</div><div class="container"><form class="form-inline" ng-submit="getuserDetails();"><div class="form-group"><label>Enter User Email:</label> <input class="form-control" type="email" placeholder="email id" ng-model="userEmail" name="name" autofocus="" required=""></div><div class="form-group"><input type="submit" class="btn btn-primary" value="Search"></div></form><div ng-show="createMessage" ng-init="getCities()" style="margin-top:15px;"><form ng-submit="UpdateUserAccount()" autocomplete="off" style="max-width:400px;"><div class="form-group row"><div class="col-md-4"><label>User Name:</label></div><div class="col-md-8"><input type="email" ng-model="userDes.username" class="form-control" placeholder="user email id" name="username" value="" required="" ng-disabled="true"></div></div><div class="form-group row" style="margin-top:10px;"><div class="col-md-4"><label>UserType:</label></div><div class="col-md-8"><select name="singleSelect" ng-model="userDes.user_type" class="form-control" required=""><option value="hamlet_executive">Executive</option><option value="hamlet_manager">Manager</option><option value="null">Select Type</option></select></div></div><div class="form-group row" style="margin-top:10px;" ng-show="userDes.user_type ==\'hamlet_executive\'"><div class="col-md-4"><label>City Name:</label></div><div class="col-md-8"><select ng-model="userDes.cities" multiple="true" class="form-control" required=""><option ng-repeat="cities in citiesList" value="{{cities.code}}">{{cities.name}}</option></select></div></div><div class="form-group row"><div ng-show="updatecreateMessage" class="alert alert-success">{{ updatecreateMessage }}</div><div ng-show="updateErrorMessage" class="alert alert-danger">{{ updateErrorMessage }}</div></div><div class="form-group row" align="center"><input type="submit" class="btn btn-primary" value="Update User" ng-disabled="submitbtn"></div></form></div></div></div>'),e.put("app/main/login.html",'<div id="login-form" class="panel panel-default centered login-form"><div class="panel-heading"><h4>Please Login</h4></div><form class="form" name="loginForm" role="form" ng-controller="LoginController" style="padding: 20px;" autocomplete="off" novalidate="" clear-input="" auto-hide="true"><div style="color:red;margin-bottom:20px;">{{loginstatus}}</div><div class="form-group" ng-class="{\'has-error\': showValidation && loginForm.name.$invalid}"><input class="form-control" type="text" placeholder="User Name" id="userName" ng-model="userName" name="name" autofocus="" required="true"> <span class="error-message" ng-show="showValidation && loginForm.name.$error.required">User name is required</span></div><div class="form-group" ng-class="{\'has-error\': showValidation && loginForm.password.$invalid}"><input class="form-control" type="password" placeholder="Password" ng-model="password" name="password" required="true"> <span class="error-message" ng-show="showValidation && loginForm.password.$error.required">You must enter a password</span></div><div ng-show="message" class="alert alert-danger">{{ message }}</div><br><div class="well" ng-show="loginText"><div class="panel-body"><div ng-bind-html="loginText"></div></div></div><button class="btn btn-lg btn-primary btn-block" type="submit" ng-click="login()">Sign in</button></form></div>'),e.put("app/main/neighbours.html",'<div class="container-fluid"><div ng-include="\'app/components/navbar/navbar.html\'"></div><div class="page-header" align="center"><h3 style="color: chocolate;">Create Neighbourhood</h3></div><div ng-init="getCities();"><div class="form-inline"><div class="form-group"><label>Select City Name:</label><select id="cityList" ng-model="cityList.city" class="form-control" ng-change="createNewNeighbor();"><option ng-repeat="cities in citiesList" value="{{cities.code}}">{{cities.name}}</option><option value="NONE">Select City</option></select></div><div class="form-group" style="float:right;"><label class="color-box" style="background-color: #FF0000;"></label> <span style="margin-left:10px;">Disabled Neighbours</span></div><div class="form-group" style="float:right;"><label class="color-box" style="background-color: #4CAF50;"></label> <span style="margin-left:10px;">Active Neighbours</span></div></div></div><div class="row" style="margin-top:15px;" ng-show="onCity"><div class="form-group row" style="float:right;padding:10px;margin-right:10px;" ng-show="createMessage"><div class="col-md-8"><button class="btn btn-lg btn-success" type="submit" ng-click="RefreshNeighbor();">Create New Hamlet</button></div></div><div class="col-md-8" style="height:500px;"><div id="map"></div></div><div class="col-md-4"><form name="Form2" class="form" ng-submit="createNeighbour()"><div class="form-group"><p style="color:red; text-align:center;">{{accountstatus}}</p></div><div class="form-group row"><div align="center"><span style="font-size: 23px; color: #4CAF50;">Fill here Neighbourhood Details</span></div></div><div class="form-group row"><div class="col-md-4"><label>Hamlet Name:</label></div><div class="col-md-8"><input type="text" ng-model="neiForm.area" class="form-control" placeholder="enter area name" required=""></div></div><div class="form-group row"><div class="col-md-4"><label>Locality:</label></div><div class="col-md-8"><input type="text" ng-model="neiForm.locality" class="form-control" placeholder="locality name" required=""></div></div><div class="form-group row"><div class="col-md-4"><label>Sub Locality:</label></div><div class="col-md-8"><input type="text" ng-model="neiForm.sublocality" class="form-control" placeholder="sub locality name" required=""></div></div><div class="form-group row"><div class="col-md-4"><label>District:</label></div><div class="col-md-8"><input type="text" ng-model="neiForm.district" class="form-control" placeholder="District name"></div></div><div class="form-group row"><div class="col-md-4"><label>City:</label></div><div class="col-md-8"><input type="text" ng-model="neiForm.city" class="form-control" placeholder="locality name" required="" ng-disabled="true"></div></div><div class="form-group row"><div class="col-md-4"><label>State:</label></div><div class="col-md-8"><input type="text" ng-model="neiForm.state" class="form-control" placeholder="locality name" required="" ng-disabled="true"></div></div><div class="form-group row"><div class="col-md-4"><label>Country:</label></div><div class="col-md-8"><input type="text" ng-model="neiForm.country" class="form-control" placeholder="country name" required="" ng-disabled="true"></div></div><div class="form-group row"><div class="col-md-8" style="float:right;"><button class="btn btn-lg btn-primary btn-block" type="submit" ng-disabled="neiForm.sub">Create Hamlet</button></div></div><div class="form-group row"><div ng-show="createErrorMessage" class="alert alert-danger col-md-8" style="float:right;">{{ createErrorMessage }}</div><div ng-show="createMessage" class="alert alert-success col-md-8" style="float:right;">{{ createMessage }}</div></div></form></div></div></div>'),e.put("app/main/password.html",'<div id="login-form" class="panel panel-default centered login-form" ng-init="passWordForm();"><div class="panel-heading"><h4>Change Password</h4></div><form class="form" name="loginForm" role="form" ng-controller="LoginController" style="padding: 20px;" autocomplete="off" novalidate="" clear-input="" auto-hide="true"><div style="color:red;margin-bottom:20px;">{{loginstatus}}</div><div class="form-group"><label>UserName :</label> <input class="form-control" type="text" placeholder="User Name" id="userName" ng-model="userName" autofocus="" required=""></div><div class="form-group"><label>Old Password :</label> <input class="form-control" type="password" placeholder="Password" ng-model="oldpassword" required=""></div><div class="form-group"><label>New Password :</label> <input class="form-control" type="password" placeholder="Password" ng-model="newpassword" required=""></div><div ng-show="message" class="alert alert-success">{{ message }}<br><br><a ui-sref="login">Login Here</a></div><br><button class="btn btn-lg btn-primary btn-block" type="submit" ng-click="ChangePass()" ng-disabled="submitbtn">submit</button></form></div>'),e.put("app/main/requests.html",'<div class="container-fluid"><div ng-include="\'app/components/navbar/navbar.html\'"></div><div class="page-header" align="center"><h3 style="color: chocolate;">Neighbourhood Requests</h3></div><div class="form-inline"><div class="form-group" style="text-align:right"><label>Status :</label><select ng-model="request.stats" class="form-control" required="" ng-change="getRecords()" style="vertical-align: middle;"><option value="ALL">All</option><option value="PENDING">Pending</option><option value="APPROVED">Approved</option><option value="REJECTED">Rejected</option></select></div><div class="form-group" style="float:right;margin-right:50px;"><a href="" class="btn btn-default btn-lg" ng-click="getRecords();"><span class="glyphicon glyphicon-refresh"></span></a></div></div><div ng-init="getRequests();"><div ng-show="message" class="alert alert-danger">{{ message }}</div><ul class="paginate"><div class="text-center"><dir-pagination-controls boundary-links="true" on-page-change="pageChangeHandler(newPageNumber)" template-url="dirPagination.tpl.html"></dir-pagination-controls></div></ul><div><table class="table table-bordered"><thead><th>Request Id</th><th>Area Name</th><th ng-show="actionBy">Action By</th><th>Action</th><th>Status</th><th>Acted By</th><th>Acted At</th></thead><tbody><tr dir-paginate="listzippr in stausReport| itemsPerPage:pagination.perPage" total-items="pagination.total" item="listzippr" current-page="pagination.currentPage"><td><a href="" ui-sref="edit" ng-click="GotoViewpage(this);">{{listzippr._id}}</a></td><td>{{listzippr.name}}</td><td ng-show="actionBy">{{listzippr.action_by}}</td><td>{{listzippr.action}}</td><td>{{listzippr.status}}</td><td>{{listzippr.acted_by}}</td><td>{{listzippr.acted_at| date:\'medium\'}}</td><td ng-show="(listzippr.status ==\'REJECTED\')&&((listzippr.action ==\'CREATED\')||(listzippr.action ==\'EDITED\'))&& userRole&&(listzippr.is_resend == undefined)"><a class="btn btn-primary" ng-click="Resendpage($index);">Resend</a></td></tr></tbody></table></div><ul class="paginate"><div class="text-center"><dir-pagination-controls boundary-links="true" on-page-change="pageChangeHandler(newPageNumber)" template-url="dirPagination.tpl.html"></dir-pagination-controls></div></ul></div></div>'),e.put("app/main/resend.html",'<div class="container-fluid"><div ng-include="\'app/components/navbar/navbar.html\'"></div><div class="row" style="margin:20px"><a ui-sref="requests">Back</a></div><div class="row"><div ng-show="Errormessage" class="alert alert-danger">{{ Errormessage }}</div></div><div align="center" class="row"><table><tr><th>Request Id</th><th>Area Name</th><th>Action By</th><th>Status</th><th>Action</th><th>Acted By</th><th>Acted At</th></tr><tr><td>{{idReport._id}}</td><td>{{idReport.name}}</td><td>{{idReport.action_by}}</td><td>{{idReport.status}}</td><td>{{idReport.action}}</td><td>{{idReport.acted_by}}</td><td>{{idReport.acted_at| date:\'medium\'}}</td></tr></table><div ng-show="errormessage" class="alert alert-danger">{{ errormessage }}</div><div ng-show="sucessmessage" class="alert alert-success">{{ sucessmessage }}</div><div class="form-inline" style="padding:15px;margin-bottom:15px;"><div class="form-group" style="float:right;"><label class="color-box" style="background-color: #FF0000;"></label> <span style="margin-left:10px;">Disabled Neighbours</span></div><div class="form-group" style="float:right;"><label class="color-box" style="background-color: #4CAF50;"></label> <span style="margin-left:10px;">Active Neighbours</span></div><div class="form-group" style="float:right;"><label class="color-box" style="background-color: #0000FF;"></label> <span style="margin-left:10px;">Resend Neighbours</span></div></div></div><div style="width:100%;height:600px;border:1px solid;margin-top:15px;"><div id="map"></div></div></div><script type="text/ng-template" id="resendpolygon.html"><div class="modal-header"> <h3 class="modal-title">Confirmation Required ?</h3> </div> <div class="modal-body"> <span>Are You Sure Want To Resend polygon for Approval of <b>{{polygonName}}?</b> </div> <div class="modal-footer"> <button type="button" ng-click="userConfirmation(\'No\')" class="btn btn-default" data-dismiss="modal">No</button> <button type="button" ng-click="userConfirmation(\'Yes\')" class="btn btn-primary" data-dismiss="modal">Yes</button> </div></script>'),e.put("app/main/update.html",'<div class="container-fluid"><div ng-include="\'app/components/navbar/navbar.html\'"></div><div class="page-header" align="center"><h3 style="color: chocolate;">Update Neighbourhood</h3></div><div ng-init="getCities();"><div class="form-inline"><div class="form-group"><label>Select City Name:</label><select ng-model="cityList.city" class="form-control" required="" ng-change="onCityChange()"><option ng-repeat="cities in citiesList" value="{{cities.code}}">{{cities.name}}</option><option value="NONE">Select City</option></select></div><div ng-show="createErrorMessage" class="alert alert-danger form-group">{{ createErrorMessage }}</div><div ng-show="createMessage" class="alert alert-success form-group">{{ createMessage }}</div><div class="form-group" style="float:right;"><label class="color-box" style="background-color: #FF0000;"></label> <span style="margin-left:10px;">Disabled Neighbours</span></div><div class="form-group" style="float:right;"><label class="color-box" style="background-color: #4CAF50;"></label> <span style="margin-left:10px;">Active Neighbours</span></div></div></div><div class="alert alert-info" role="alert" align="center" ng-show="onCity"><h5 style="color: crimson;">Double click on the polygon what you want to edit and click on edit tool on leftside of map</h5></div><div style="width:100%;height:600px;border:1px solid;" ng-show="onCity"><div id="map"></div></div><div></div><script type="text/ng-template" id="confirmUpdate.html"><div class="modal-header"> <h3 class="modal-title">Confirmation Required ?</h3> </div> <div class="modal-body"> <span>Are You Sure Want To Change polygon of <b>{{polygonName}}?</b> </div> <div class="modal-footer"> <button type="button" ng-click="userConfirmation(\'No\')" class="btn btn-default" data-dismiss="modal">No</button> <button type="button" ng-click="userConfirmation(\'Yes\')" class="btn btn-primary" data-dismiss="modal">Yes</button> </div></script><script type="text/ng-template" id="Message.html"><div class="modal-header"> <button type="button" class="close" data-dismiss="modal" ng-click="userConfirmation(\'No\')">&times;</button> <h3 class="modal-title">Warning Message</h3> </div> <div class="modal-body"> <span>Disabled polygons are not editable </span> </div> <div class="modal-footer"> <br/> </div></script></div>'),e.put("app/components/navbar/navbar.html",'<div class="container-fluid collapse navbar-collapse" style="background: #4CAF50;" ng-controller="NavbarController"><div class="btn-group"><a ui-sref="requests"><img src="/logo.png" style="padding:0 5px 0 5px;"></a></div><div class="btn-group" ng-click="setTab(1)" ng-model="deleted"><a ui-sref="requests" class="btn-success btn" ng-class="{active:isSet(1)}"><strong>{{Requests}}</strong></a></div><div class="btn-group" dropdown="" keyboard-nav="" ng-click="setTab(2)"><button id="simple-btn-keyboard-nav" type="button" class="btn-success btn" dropdown-toggle="" ng-class="{active:isSet(2)}"><strong>Neighbourhoods</strong> <span class="caret"></span></button><ul class="dropdown-menu" role="menu" aria-labelledby="simple-btn-keyboard-nav"><li><a href="" ui-sref="neighbours" class="btn">New Neighbour</a></li><li><a href="" ui-sref="update" class="btn">Update</a></li><li><a href="" ui-sref="disable" class="btn">Disable</a></li><li><a href="" ui-sref="enable" class="btn">Enable</a></li></ul></div><div class="btn-group" dropdown="" keyboard-nav="" ng-click="setTab(3)" ng-show="newUser"><button id="simple-btn-keyboard-nav" type="button" class="btn-success btn" dropdown-toggle="" ng-class="{active:isSet(3)}"><strong>User</strong> <span class="caret"></span></button><ul class="dropdown-menu" role="menu" aria-labelledby="simple-btn-keyboard-nav"><li><a href="" ui-sref="createUser" class="btn">Add New User</a></li><li><a href="" ui-sref="getUser" class="btn">Get User Details</a></li><li><a href="" class="btn" ng-disabled="true">Edit Existing User</a></li></ul></div><div class="btn-group navbar-right" dropdown="" keyboard-nav=""><button id="simple-btn-keyboard-nav" type="button" class="btn-success btn" dropdown-toggle=""><span><strong>{{loginMessage}}</strong></span>{{LoggedInUser}} <span class="caret"></span></button><ul class="dropdown-menu" role="menu" aria-labelledby="simple-btn-keyboard-nav"><li><a href="" ng-click="logout();">Logout</a></li><li><a ui-sref="password">Change Password</a></li></ul></div></div>')}]);