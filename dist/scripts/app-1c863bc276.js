!function(){"use strict";angular.module("consoles",["ngCookies","ngTouch","ngSanitize","ngResource","ui.bootstrap","ui.router","ui.grid","ngCsv","ngPrettyJson","ui.grid.exporter","zippr.config","ngFileUpload","angularUtils.directives.dirPagination","LocalStorageModule"])}(),angular.module("consoles").controller("NavbarController",["$scope","Messages","$state","ZIPPR_ENVIRONMENT","$http",function(e,o,r,n,s){"use strict";var t=o.getUserName();e.LoggedInUser=t,e.logout=function(){console.log("logout function called");var t={method:"POST",url:n.server+"hamlet/nadmin/user/logout",headers:{"Content-Type":"application/json","x-hamlet-api-key":n.apikey},data:{username:e.userName,password:e.password}};s(t).success(function(n){n.ok===!0?(o.setUserName(""),o.setSessionToken(""),o.setUserType(""),r.go("login",{},{reload:!0})):e.message=n.error}).error(function(e){console.log(e,"error data")})}}]),angular.module("consoles").controller("ZipprController",["$scope","$resource","$log","Messages",function(e,o,r,n){"use strict";var s="pk.eyJ1IjoiYXZ1Y2hpIiwiYSI6InlIcWxFWWcifQ.JnJCwFkMDgCfdVrOuSXaWw#11/19.0644/72.9849";L.tileLayer("https://{s}.tiles.mapbox.com/v4/avuchi.d68f9b86/{z}/{x}/{y}.png?access_token="+s,{attribution:'&copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors',maxZoom:18}).addTo(e.map)}]),angular.module("consoles").factory("Messages",function(){var e={userName:"",sessionToken:"",userType:""};return{getUserName:function(){return e.userName},setUserName:function(o){e.userName=o},getSessionToken:function(){return e.sessionToken},setSessionToken:function(o){e.sessionToken=o},getUserType:function(){return e.userType},setUserType:function(o){e.userType=o}}}),angular.module("consoles").controller("MainController",["$scope","$resource","$log","Messages",function(e,o,r,n){"use strict";console.log("Messages.getUserName")}]),angular.module("consoles").controller("LoginController",["$rootScope","$scope","$resource","$state","$log","$http","ZIPPR_ENVIRONMENT","Messages",function(e,o,r,n,s,t,a,i){"use strict";console.log(a.server,"ZIPPR_ENVIRONMENT.server"),o.login=function(e){var r={method:"POST",url:a.server+"hamlet/nadmin/user/login",headers:{"Content-Type":"application/json","x-hamlet-api-key":a.apikey},data:{username:o.userName,password:o.password}};t(r).success(function(e){e.ok===!0?(i.setUserName(e.response.username),i.setSessionToken(e.response["x-hamlet-sessiontoken"]),i.setUserType(e.response.user_type),n.go("requests",{},{reload:!0})):o.message=e.error}).error(function(e){console.log(e,"error data")})}}]),function(){"use strict";function e(e,o,r,n,s){n.defaults.headers.common["x-zippr-sessiontoken"]=(s.get("sessiontoken")||"").toString(),o.debug("runBlock end"),L.Icon.Default.imagePath="http://cdn.leafletjs.com/leaflet-0.7.3/images",e.$on("$stateChangeError",function(e,o,n,s,t,a){r.go("login")})}e.$inject=["$rootScope","$log","$state","$http","localStorageService"],angular.module("consoles").run(e)}(),function(){"use strict";function e(e,o){e.state("login",{url:"/login",templateUrl:"app/main/login.html",controller:"LoginController"}).state("requests",{url:"/requests",templateUrl:"app/main/requests.html",controller:"MainController"}).state("neighbours",{url:"/neighbours",templateUrl:"app/main/neighbours.html",controller:"ZipprController"}).state("update",{url:"/update",templateUrl:"app/main/update.html",controller:"ZipprController"}).state("createUser",{url:"/createUser",templateUrl:"app/main/createUser.html",controller:"MainController"}),o.otherwise("/login")}e.$inject=["$stateProvider","$urlRouterProvider"],angular.module("consoles").config(e)}(),function(){"use strict";angular.module("consoles").constant("zippr_server","http://qa.zip.pr/")}(),function(){"use strict";function e(e){e.debugEnabled(!0)}e.$inject=["$logProvider"],angular.module("consoles").config(e)}(),angular.module("zippr.config",[]).constant("ZIPPR_ENVIRONMENT",{server:"http://hamletdev.zip.pr/",apikey:"d338667c0196254de1922668f5b1344ba80e54fd0ef481f09cef5336b6471a99"}),angular.module("consoles").service("AuthService",["$q","$rootScope","$state","localStorageService",function(e,o,r,n){"use strict";return{getStatus:function(){var s=e.defer(),t=n.get("userName");return""!==t&&null!==t?(s.resolve({name:"Success"}),o.verifiedType=!0,o.LoggedInUser=t):(s.reject(),r.go("login")),s.promise}}}]),angular.module("consoles").run(["$templateCache",function(e){e.put("app/main/createUser.html",'<div class="container"><div ng-include="\'app/components/navbar/navbar.html\'"></div><div align="center" style="width:50%"><form><div class="row"><div class="col-md-6"><label>Username :</label></div><div class="col-md-6"><input type="text"></div></div></form></div></div><div ui-view=""></div>'),e.put("app/main/login.html",'<div id="login-form" class="panel panel-default centered login-form"><div class="panel-heading"><h4>Please Login</h4></div><form class="form" name="loginForm" role="form" ng-controller="LoginController" style="padding: 20px;" autocomplete="off" novalidate="" clear-input="" auto-hide="true"><div style="color:red;margin-bottom:20px;">{{loginstatus}}</div><div class="form-group" ng-class="{\'has-error\': showValidation && loginForm.name.$invalid}"><input class="form-control" type="text" placeholder="User Name" id="userName" ng-model="userName" name="name" autofocus="" required="true"> <span class="error-message" ng-show="showValidation && loginForm.name.$error.required">User name is required</span></div><div class="form-group" ng-class="{\'has-error\': showValidation && loginForm.password.$invalid}"><input class="form-control" type="password" placeholder="Password" ng-model="password" name="password" required="true"> <span class="error-message" ng-show="showValidation && loginForm.password.$error.required">You must enter a password</span></div><div ng-show="message" class="alert alert-danger">{{ message }}</div><br><div class="well" ng-show="loginText"><div class="panel-body"><div ng-bind-html="loginText"></div></div></div><button class="btn btn-lg btn-primary btn-block" type="submit" ng-click="login()">Sign in</button></form></div>'),e.put("app/main/neighbours.html",'<div class="container"><div ng-include="\'app/components/navbar/navbar.html\'"></div><div style="height:500px;border:1px solid;"><div id="map"></div></div></div><div ui-view=""></div>'),e.put("app/main/requests.html",'<div class="container-fluid"><div ng-include="\'app/components/navbar/navbar.html\'"></div></div>'),e.put("app/main/update.html",'<div class="container"><div ng-include="\'app/components/navbar/navbar.html\'"></div><div style="height:500px;border:1px solid;"><div id="map"></div></div></div>'),e.put("app/components/navbar/navbar.html",'<div class="collapse navbar-collapse" style="background:#337ab7;" ng-controller="NavbarController"><div class="btn-group"><button><a ui-sref="requests">MyRequests</a></button></div><div class="btn-group"><button><a ui-sref="neighbours">New Neighbour</a></button></div><div class="btn-group"><button><a ui-sref="neighbours">Update</a></button></div><div class="btn-group"><button><a ui-sref="createUser">Create User</a></button></div><div class="btn-group navbar-right" dropdown="" keyboard-nav=""><button id="simple-btn-keyboard-nav" type="button" class="btn btn-primary" dropdown-toggle="">{{LoggedInUser}} <span class="caret"></span></button><ul class="dropdown-menu" role="menu" aria-labelledby="simple-btn-keyboard-nav"><li><a href="" ng-click="logout();">Logout</a></li></ul></div></div>')}]);