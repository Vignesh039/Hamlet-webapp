!function(){"use strict";angular.module("consoles",["ngCookies","ngTouch","ngSanitize","ngResource","ui.bootstrap","ui.router","ui.grid","ngCsv","ngPrettyJson","ui.grid.exporter","zippr.config","ngFileUpload","angularUtils.directives.dirPagination","LocalStorageModule","angularModalService"])}(),angular.module("consoles").controller("NavbarController",["$rootScope","$scope","localStorageService","$state","ZIPPR_ENVIRONMENT","$http",function(e,t,o,a,s,r){"use strict";var n=o.get("userName");t.LoggedInUser=n;var i=o.get("userType");"hamlet_executive"===i?(t.loginMessage="Logged In Executive : ",t.newUser=!1):(t.loginMessage="Logged In Manager : ",t.newUser=!0),t.setTab=function(t){e.tab=t},t.isSet=function(o){return void 0===e.tab&&(e.tab=1),t.tab=e.tab,t.tab===o},t.logout=function(){var n=o.get("sessiontoken"),i={method:"POST",url:s.server+"hamlet/nadmin/user/logout",headers:{"Content-Type":"application/json","x-hamlet-api-key":s.apikey,"x-hamlet-sessiontoken":n}};r(i).success(function(s){s.ok===!0?(o.clearAll(),e.tab=1,a.go("login",{},{reload:!0})):t.message=s.error}).error(function(e){console.log(e,"error data")})}}]),angular.module("consoles").factory("Messages",function(){var e={userName:"",sessionToken:"",userType:"",data:{}};return{getData:function(){return e.data},setData:function(t){e.data=t},getUserName:function(){return e.userName},setUserName:function(t){e.userName=t},getSessionToken:function(){return e.sessionToken},setSessionToken:function(t){e.sessionToken=t},getUserType:function(){return e.userType},setUserType:function(t){e.userType=t}}}),angular.module("consoles").controller("requestController",["$scope","localStorageService","$state","ZIPPR_ENVIRONMENT","$http",function(e,t,o,a,s){"use strict";e.request={},e.request.stats="PENDING",e.pagination={perPage:20,currentPage:1,total:200},e.getRecords=function(){var t=e.request.stats;e.getRequests(t)},e.getRequests=function(){e.pageChangeHandler(1)},e.pageChangeHandler=function(o){console.log(o,"from pagination");var r,n=t.get("sessiontoken"),i=t.get("userType");r="hamlet_executive"===i?"hamlet/nadmin/neighbourhoods/myrequests":"hamlet/nadmin/neighbourhoods/requests";var l={method:"GET",url:a.server+r,headers:{"Content-Type":"application/json","x-hamlet-api-key":a.apikey,"x-hamlet-sessiontoken":n},params:{status:e.request.stats}};s(l).success(function(t){t.ok===!0?(e.message=!1,e.stausReport=t.response,e.pagination.total=200):e.message=t.error}).error(function(e){console.log(e,"error data")})}}]),angular.module("consoles").controller("MainController",["$scope","$resource","$http","localStorageService","ZIPPR_ENVIRONMENT",function(e,t,o,a,s,r){"use strict";e.accForm={},e.accForm.utype="hamlet_executive",e.accForm.city="HYD",e.myValue=!0;var n=a.get("sessiontoken");e.getCities=function(){var t={method:"Get",url:s.server+"hamlet/nadmin/neighbourhoods/cities",headers:{"Content-Type":"application/json","x-hamlet-api-key":s.apikey,"x-hamlet-sessiontoken":n}};o(t).success(function(t){t.ok===!0?(e.citiesList=t.response,console.log(e.citiesList,"Cities list")):e.message=t.error}).error(function(e){console.log(e,"error data")})},e.userTypeSelction=function(){e.myValue="hamlet_executive"===e.accForm.utype?!0:!1},e.createAccount=function(){var t={method:"POST",url:s.server+"/hamlet/nadmin/user",headers:{"Content-Type":"application/json","x-hamlet-api-key":s.apikey,"x-hamlet-sessiontoken":n},data:{email:e.accForm.uname,password:e.accForm.pwd,cities:e.accForm.city,user_type:e.accForm.utype}};o(t).success(function(t){t.ok===!0?(e.createMessage="User Created successfully",e.submitbtn=!0):e.createMessage=t.error.reason}).error(function(e){console.log(e,"error data")})}}]),angular.module("consoles").controller("LoginController",["$rootScope","$scope","$cookies","$state","localStorageService","$http","ZIPPR_ENVIRONMENT",function(e,t,o,a,s,r,n){"use strict";t.login=function(e){var o={method:"POST",url:n.server+"hamlet/nadmin/user/login",headers:{"Content-Type":"application/json","x-hamlet-api-key":n.apikey},data:{username:t.userName,password:t.password}};r(o).success(function(e,o,r,n){e.ok===!0?(console.log(n,"$cookies"),s.set("userName",e.response.username),s.set("sessiontoken",e.response["x-hamlet-sessiontoken"]),s.set("userType",e.response.user_type),a.go("requests",{},{reload:!0})):t.message=e.error}).error(function(e){console.log(e,"error data")})},t.passWordForm=function(){var e=s.get("userName");t.userName=e},t.ChangePass=function(e){var o=s.get("sessiontoken"),a={method:"POST",url:n.server+"hamlet/nadmin/user/password/change",headers:{"Content-Type":"application/json","x-hamlet-api-key":n.apikey,"x-hamlet-sessiontoken":o},data:{existing_password:t.oldpassword,new_password:t.newpassword}};r(a).success(function(e){e.ok===!0?(t.message="passwordword Changed Successfully",t.submitbtn=!0,s.clearAll()):t.loginstatus=e.error.reason}).error(function(e){console.log(e,"error data")})}}]),angular.module("consoles").controller("editController",["$scope","localStorageService","$state","ZIPPR_ENVIRONMENT","$http",function(e,t,o,a,s){"use strict"}]),angular.module("consoles").controller("DisableController",["$scope","$http","ZIPPR_ENVIRONMENT","localStorageService","ModalService","$modal","Messages",function(e,t,o,a,s,r,n){"use strict";function i(t){t.layers.eachLayer(function(t){var o=t.toGeoJSON(),a=JSON.stringify(o);e.storeDb=JSON.parse(a),n.setData(e.storeDb),e.show()})}e.cityList={},e.cityList.city="NONE";var l,c,d,u=a.get("sessiontoken");e.getCities=function(){var a={method:"Get",url:o.server+"hamlet/nadmin/neighbourhoods/cities",headers:{"Content-Type":"application/json","x-hamlet-api-key":o.apikey,"x-hamlet-sessiontoken":u}};t(a).success(function(t){t.ok===!0?e.citiesList=t.response:e.message=t.error}).error(function(e){console.log(e,"error data")}),L.mapbox.accessToken="pk.eyJ1IjoiYXZ1Y2hpIiwiYSI6InlIcWxFWWcifQ.JnJCwFkMDgCfdVrOuSXaWw#11/19.0644/72.9849";var s=L.latLng(17.20376982191752,78.38607788085938),r=L.latLng(17.60083012593064,78.5302734375),n=L.latLngBounds(s,r);e.map=L.mapbox.map("map","mapbox.streets",{maxBounds:n,maxZoom:19,minZoom:10}),e.map.setView([17.353044912613186,78.48209023475647],15),c=(new L.FeatureGroup).addTo(e.map),l=(new L.FeatureGroup).addTo(e.map),d=new L.Control.Draw({draw:{polyline:!1,polygon:!1,marker:!1,rectangle:!1,circle:!1},edit:{featureGroup:c},remove:!1}),e.map.addControl(d),e.map.setView([17.353044912613186,78.48209023475647],12),e.map.on("draw:deleted",i);for(var p=document.querySelectorAll(".leaflet-draw-edit-edit"),m=0;m<p.length;m++)p[m].style.visibility="hidden"},e.show=function(){var t=r.open({animation:!0,templateUrl:"confirmDisable.html",controller:"Disablepolygon",resolve:{$modalInstance:function(){return function(){return t}}}});t.result.then(function(e){console.log(e,"response")},function(t){"success"===t?(e.createErrorMessage=!1,e.createMessage="Polygon Disabled Successfully"):(e.createMessage=!1,e.createErrorMessage=t)})},e.onCityChange=function(){if("NONE"!==e.cityList.city){e.onCity=!0,e.createMessage=!1,e.createErrorMessage=!1,c.clearLayers();var a={method:"GET",url:o.server+"hamlet/nadmin/neighbourhoods",headers:{"Content-Type":"application/json","x-hamlet-api-key":o.apikey,"x-hamlet-sessiontoken":u},params:{city:e.cityList.city}};t(a).success(function(t){if(t.ok===!0){var o=(t.response,{type:"FeatureCollection",features:[]});for(var a in t.response){var s=t.response[a],r={type:"Feature",id:s._id,properties:{name:s.name},geometry:s.geometry};o.features.push(r)}{L.geoJson(o,{onEachFeature:function(e,t){l.addLayer(t),t.on("dblclick",function(e){0===c.getLayers().length&&c.addLayer(e.target)});var o=e.properties.name;t.bindPopup(o)},style:function(e){return{fillColor:"#4CAF50",color:"#000000"}}})}}else e.message=t.error.reason})}if("HYD"===e.cityList.city){l.clearLayers();var s=L.latLng(17.147351748174778,78.2281494140625),r=L.latLng(17.709444568316783,78.6785888671875),n=L.latLngBounds(s,r);e.map.options.maxBounds=n,e.map.fitBounds(n)}if("BLR"===e.cityList.city){l.clearLayers();var s=L.latLng(12.846615538845874,77.50167846679688),r=L.latLng(13.092854552762695,77.64450073242188),n=L.latLngBounds(s,r);e.map.options.maxBounds=n,e.map.fitBounds(n)}if("DEL"===e.cityList.city){l.clearLayers();var s=L.latLng(28.41797549622403,76.86996459960938),r=L.latLng(28.881957139774222,77.24899291992188),n=L.latLngBounds(s,r);e.map.options.maxBounds=n,e.map.fitBounds(n)}}}]),angular.module("consoles").controller("Updatepolygon",["$scope","$http","$modalInstance","localStorageService","ZIPPR_ENVIRONMENT","Messages",function(e,t,o,a,s,r){"use strict";var n=r.getData(),i=a.get("sessiontoken");e.polygonName=n.features[0].properties.name,e.userConfirmation=function(t){"Yes"===t?e.updateNeighbour():o().dismiss("Polygon Not updated")},e.updateNeighbour=function(){var e={method:"POST",url:s.server+"hamlet/nadmin/neighbourhoods/update",headers:{"Content-Type":"application/json","x-hamlet-api-key":s.apikey,"x-hamlet-sessiontoken":i},data:{geometry:n.features[0].geometry,neighbourhood_id:n.features[0].id}};t(e).success(function(e){o().dismiss(e.ok===!0?"success":e.error.reason)}).error(function(e){o().dismiss(e)})}}]),angular.module("consoles").controller("UpdateController",["$scope","$http","ZIPPR_ENVIRONMENT","localStorageService","ModalService","$modal","Messages",function(e,t,o,a,s,r,n){"use strict";function i(t){t.layers.eachLayer(function(t){var o=c.toGeoJSON(),a=JSON.stringify(o);e.storeDb=JSON.parse(a),n.setData(e.storeDb),e.show()})}e.cityList={},e.neiForm={},e.neiForm.city="Hyderabad",e.neiForm.district="Ranga Reddy",e.neiForm.state="Telangana",e.neiForm.country="India",e.cityList.city="NONE",e.showModal=!0;var l,c,d,u=a.get("sessiontoken");e.getCities=function(){var a={method:"Get",url:o.server+"hamlet/nadmin/neighbourhoods/cities",headers:{"Content-Type":"application/json","x-hamlet-api-key":o.apikey,"x-hamlet-sessiontoken":u}};t(a).success(function(t){t.ok===!0?e.citiesList=t.response:e.message=t.error}).error(function(e){console.log(e,"error data")}),L.mapbox.accessToken="pk.eyJ1IjoiYXZ1Y2hpIiwiYSI6InlIcWxFWWcifQ.JnJCwFkMDgCfdVrOuSXaWw#11/19.0644/72.9849";var s=L.latLng(17.20376982191752,78.38607788085938),r=L.latLng(17.60083012593064,78.5302734375),n=L.latLngBounds(s,r);e.map=L.mapbox.map("map","mapbox.streets",{maxBounds:n,maxZoom:19,minZoom:10}),e.map.setView([17.353044912613186,78.48209023475647],15),c=(new L.FeatureGroup).addTo(e.map),l=(new L.FeatureGroup).addTo(e.map),d=new L.Control.Draw({draw:{polyline:!1,polygon:!1,marker:!1,rectangle:!1,circle:!1},edit:{featureGroup:c},remove:!1}),e.map.addControl(d),e.map.setView([17.353044912613186,78.48209023475647],12),e.map.on("draw:edited",i);for(var p=document.querySelectorAll(".leaflet-draw-edit-remove"),m=0;m<p.length;m++)p[m].style.visibility="hidden"},e.show=function(){var t=r.open({animation:!0,templateUrl:"confirmUpdate.html",controller:"Updatepolygon",resolve:{$modalInstance:function(){return function(){return t}}}});t.result.then(function(e){console.log(e,"response")},function(t){"success"===t?(e.createErrorMessage=!1,e.createMessage="Successfully Polygon updated"):(e.createMessage=!1,e.createErrorMessage=t)})},e.onCityChange=function(){if("NONE"!==e.cityList.city){e.onCity=!0,e.createMessage=!1,e.createErrorMessage=!1,c.clearLayers();var a={method:"GET",url:o.server+"hamlet/nadmin/neighbourhoods",headers:{"Content-Type":"application/json","x-hamlet-api-key":o.apikey,"x-hamlet-sessiontoken":u},params:{city:e.cityList.city}};t(a).success(function(t){if(t.ok===!0){var o=(t.response,{type:"FeatureCollection",features:[]});for(var a in t.response){var s=t.response[a],r={type:"Feature",id:s._id,properties:{name:s.name},geometry:s.geometry};o.features.push(r)}{L.geoJson(o,{onEachFeature:function(e,t){l.addLayer(t),t.on("dblclick",function(e){0===c.getLayers().length&&c.addLayer(e.target)});var o=e.properties.name;t.bindPopup(o)},style:function(e){return{fillColor:"#4CAF50",color:"#000000"}}})}}else e.message=t.error.reason})}if("HYD"===e.cityList.city){l.clearLayers();var s=L.latLng(17.147351748174778,78.2281494140625),r=L.latLng(17.709444568316783,78.6785888671875),n=L.latLngBounds(s,r);e.map.options.maxBounds=n,e.map.fitBounds(n)}if("BLR"===e.cityList.city){l.clearLayers();var s=L.latLng(12.846615538845874,77.50167846679688),r=L.latLng(13.092854552762695,77.64450073242188),n=L.latLngBounds(s,r);e.map.options.maxBounds=n,e.map.fitBounds(n)}if("DEL"===e.cityList.city){l.clearLayers();var s=L.latLng(28.41797549622403,76.86996459960938),r=L.latLng(28.881957139774222,77.24899291992188),n=L.latLngBounds(s,r);e.map.options.maxBounds=n,e.map.fitBounds(n)}}}]),angular.module("consoles").controller("NeighbourController",["$scope","$http","ZIPPR_ENVIRONMENT","localStorageService",function(e,t,o,a){"use strict";function s(t){t.layers.eachLayer(function(t){var o=l.toGeoJSON(),a=JSON.stringify(o);e.storeDb=JSON.parse(a),console.log(e.storeDb,"In osm map polygon edited")})}function r(t){l.addLayer(t.layer);var o=l.toGeoJSON(),a=JSON.stringify(o);e.storeDb=JSON.parse(a);for(var s=document.querySelectorAll(".leaflet-draw-draw-polygon"),r=0;r<s.length;r++)s[r].style.visibility="hidden";console.log("In osm map polygon created")}function n(t){var o=l.toGeoJSON(),a=JSON.stringify(o);e.storeDb=JSON.parse(a);for(var s=document.querySelectorAll(".leaflet-draw-draw-polygon"),r=0;r<s.length;r++)s[r].style.visibility="visible";console.log(e.storeDb,"In osm map polygon deleted")}e.cityList={},e.neiForm={},e.neiForm.city="Hyderabad",e.neiForm.district="Ranga Reddy",e.neiForm.state="Telangana",e.neiForm.country="India",e.cityList.city="NONE";var i,l,c=a.get("sessiontoken");e.getCities=function(){var a={method:"Get",url:o.server+"hamlet/nadmin/neighbourhoods/cities",headers:{"Content-Type":"application/json","x-hamlet-api-key":o.apikey,"x-hamlet-sessiontoken":c},cache:!0};t(a).success(function(t,o,a,s){t.ok===!0?(console.log(a("Set-Cookie"),"cookie"),e.citiesList=t.response):e.message=t.error}).error(function(e){console.log(e,"error data")}),L.mapbox.accessToken="pk.eyJ1IjoiYXZ1Y2hpIiwiYSI6InlIcWxFWWcifQ.JnJCwFkMDgCfdVrOuSXaWw#11/19.0644/72.9849";var d=L.latLng(17.20376982191752,78.38607788085938),u=L.latLng(17.60083012593064,78.5302734375),p=L.latLngBounds(d,u);e.map=L.mapbox.map("map","mapbox.streets",{maxBounds:p,maxZoom:19,minZoom:10}),i=(new L.FeatureGroup).addTo(e.map),l=(new L.FeatureGroup).addTo(e.map);var m=new L.Control.Draw({draw:{polyline:!1,marker:!1,rectangle:!1,circle:!1},edit:{featureGroup:l}});e.map.addControl(m),e.map.setView([17.353044912613186,78.48209023475647],12),e.map.on("draw:created",r),e.map.on("draw:edited",s),e.map.on("draw:deleted",n)},e.createNewNeighbor=function(){if("NONE"!==e.cityList.city){e.onCity=!0;var a={method:"GET",url:o.server+"hamlet/nadmin/neighbourhoods",headers:{"Content-Type":"application/json","x-hamlet-api-key":o.apikey,"x-hamlet-sessiontoken":c},cache:!0,params:{city:e.cityList.city}};t(a).success(function(t){if(t.ok===!0){var o=(t.response,{type:"FeatureCollection",features:[]});for(var a in t.response){var s=t.response[a],r={type:"Feature",properties:{name:s.name},geometry:s.geometry};o.features.push(r)}{L.geoJson(o,{onEachFeature:function(e,t){i.addLayer(t);var o=e.properties.name;t.bindPopup(o)},style:function(e){return{fillColor:"#4CAF50",color:"#000000"}}})}}else e.message=t.error.reason})}if("HYD"===e.cityList.city){i.clearLayers();var s=L.latLng(17.147351748174778,78.2281494140625),r=L.latLng(17.709444568316783,78.6785888671875),n=L.latLngBounds(s,r);e.map.options.maxBounds=n,e.map.fitBounds(n)}if("BLR"===e.cityList.city){i.clearLayers();var s=L.latLng(12.846615538845874,77.50167846679688),r=L.latLng(13.092854552762695,77.64450073242188),n=L.latLngBounds(s,r);e.map.options.maxBounds=n,e.map.fitBounds(n)}if("DEL"===e.cityList.city){i.clearLayers();var s=L.latLng(28.41797549622403,76.86996459960938),r=L.latLng(28.881957139774222,77.24899291992188),n=L.latLngBounds(s,r);e.map.options.maxBounds=n,e.map.fitBounds(n)}},e.createNeighbour=function(){if("object"==typeof e.storeDb){var a={method:"POST",url:o.server+"hamlet/nadmin/neighbourhoods/add",headers:{"Content-Type":"application/json","x-hamlet-api-key":o.apikey,"x-hamlet-sessiontoken":c},data:{city:e.cityList.city,name:e.neiForm.area,properties:{locality:e.neiForm.locality,subLocalit:e.neiForm.sublocality,city:e.neiForm.city,district:e.neiForm.district,state:e.neiForm.state,country:e.neiForm.country},geometry:e.storeDb.features[0].geometry}};t(a).success(function(t){t.ok===!0?(e.createErrorMessage=!1,e.createMessage="Successfully Polygon Created",e.neiForm.sub=!0):(e.createMessage=!1,e.createErrorMessage=t.error.reason)}).error(function(e){console.log(e,"error data")})}else e.createErrorMessage="Draw new Polygon on Map Then save"}}]),angular.module("consoles").controller("Disablepolygon",["$scope","$http","$modalInstance","localStorageService","ZIPPR_ENVIRONMENT","Messages",function(e,t,o,a,s,r){"use strict";var n=r.getData();console.log(n,"from disable ");var i=a.get("sessiontoken");e.polygonName=n.properties.name,e.userConfirmation=function(t){"Yes"===t?e.disableNeighbour():o().dismiss("Polygon Not Disabled")},e.disableNeighbour=function(){var e={method:"POST",url:s.server+"hamlet/nadmin/neighbourhoods/disable",headers:{"Content-Type":"application/json","x-hamlet-api-key":s.apikey,"x-hamlet-sessiontoken":i},data:{neighbourhood_id:n.id}};t(e).success(function(e){o().dismiss(e.ok===!0?"success":e.error.reason)}).error(function(e){o().dismiss(e)})}}]),function(){"use strict";function e(e,t,o,a,s){t.debug("runBlock end"),e.$on("$stateChangeError",function(e,t,a,s,r,n){o.go("login")})}e.$inject=["$rootScope","$log","$state","$http","localStorageService"],angular.module("consoles").run(e)}(),function(){"use strict";function e(e,t){e.state("login",{url:"/login",templateUrl:"app/main/login.html",controller:"LoginController"}).state("requests",{url:"/requests",templateUrl:"app/main/requests.html",controller:"requestController",resolve:{status:["AuthService",function(e){return e.getStatus()}]}}).state("neighbours",{url:"/neighbours",templateUrl:"app/main/neighbours.html",controller:"NeighbourController",resolve:{status:["AuthService",function(e){return e.getStatus()}]}}).state("update",{url:"/update",templateUrl:"app/main/update.html",controller:"UpdateController",resolve:{status:["AuthService",function(e){return e.getStatus()}]}}).state("disable",{url:"/disable",templateUrl:"app/main/disable.html",controller:"DisableController",resolve:{status:["AuthService",function(e){return e.getStatus()}]}}).state("edit",{url:"/edit",templateUrl:"app/main/edit.html",controller:"editController",resolve:{status:["AuthService",function(e){return e.getStatus()}]}}).state("createUser",{url:"/createUser",templateUrl:"app/main/createUser.html",controller:"MainController",resolve:{status:["AuthService",function(e){return e.getStatus()}]}}).state("password",{url:"/password",templateUrl:"app/main/password.html",controller:"LoginController",resolve:{status:["AuthService",function(e){return e.getStatus()}]}}),t.otherwise("/login")}e.$inject=["$stateProvider","$urlRouterProvider"],angular.module("consoles").config(e)}(),function(){"use strict";angular.module("consoles").constant("zippr_server","http://qa.zip.pr/")}(),function(){"use strict";function e(e,t){e.debugEnabled(!0)}e.$inject=["$logProvider","$httpProvider"],angular.module("consoles").config(e)}(),angular.module("zippr.config",[]).constant("ZIPPR_ENVIRONMENT",{server:"http://hamletdev.zip.pr/",apikey:"d338667c0196254de1922668f5b1344ba80e54fd0ef481f09cef5336b6471a99"}),angular.module("consoles").service("AuthService",["$q","$state","localStorageService",function(e,t,o){"use strict";return{getStatus:function(){var a=e.defer(),s=o.get("userName");return""!==s&&null!==s?a.resolve({name:"Success"}):(a.reject(),o.clearAll(),$rootScope.tab=1,t.go("login")),a.promise}}}]),angular.module("consoles").run(["$templateCache",function(e){e.put("app/main/createUser.html",'<div class="container"><div ng-include="\'app/components/navbar/navbar.html\'"></div><div align="center" class="row" style="width:50%;" id="form-details" ng-init="getCities();"><form name="Form1" class="form" ng-submit="createAccount()"><div class="form-group"><p style="color:red; text-align:center;">{{accountstatus}}</p></div><div class="form-group row"><div class="col-md-6"><label>User Name:</label></div><div class="col-md-6"><input type="email" ng-model="accForm.uname" class="form-control" placeholder="user email id" required=""></div></div><div class="form-group row"><div class="col-md-6"><label>Password:</label></div><div class="col-md-6"><input type="password" ng-model="accForm.pwd" class="form-control" placeholder="password" required=""></div></div><div class="form-group row" style="margin-top:10px;"><div class="col-md-6"><label>UserType:</label></div><div class="col-md-6"><select name="singleSelect" ng-model="accForm.utype" class="form-control" required="" ng-change="userTypeSelction();"><option value="hamlet_executive">Excutive</option><option value="hamlet_manager">Manager</option></select></div></div><div class="form-group row" style="margin-top:10px;" ng-show="myValue"><div class="col-md-6"><label>City Name:</label></div><div class="col-md-6"><select ng-model="accForm.city" multiple="true" class="form-control" required=""><option ng-repeat="cities in citiesList" value="{{cities.code}}">{{cities.name}}</option></select></div></div><div class="form-group row"><div ng-show="createMessage" class="alert alert-success col-md-6" style="float:right;">{{ createMessage }}</div></div><div class="form-group row"><div class="col-md-6" style="float:right;"><button class="btn btn-lg btn-primary btn-block" type="submit" ng-disabled="submitbtn">Create User</button></div></div></form></div></div><div ui-view=""></div>'),e.put("app/main/disable.html",'<div class="container"><div ng-include="\'app/components/navbar/navbar.html\'"></div><div ng-init="getCities();"><form class="form"><div class="row" style="margin-top:10px;"><div class="col-md-1"><label>Select City Name:</label></div><div class="col-md-2"><select ng-model="cityList.city" class="form-control" required="" ng-change="onCityChange()"><option ng-repeat="cities in citiesList" value="{{cities.code}}">{{cities.name}}</option><option value="NONE">None</option></select></div><div class="col-md-6"><div ng-show="createErrorMessage" class="alert alert-danger col-md-8" style="float:right;">{{ createErrorMessage }}</div><div ng-show="createMessage" class="alert alert-success col-md-8" style="float:right;">{{ createMessage }}</div></div></div></form></div><div style="width:100%;height:600px;border:1px solid;" ng-show="onCity"><div id="map"></div></div><div></div><script type="text/ng-template" id="confirmDisable.html"><div class="modal-header"> <h3 class="modal-title">Confirmation Required ?</h3> </div> <div class="modal-body"> <span>Are You Sure Want To Disable polygon of <b>{{polygonName}}?</b> </div> <div class="modal-footer"> <button type="button" ng-click="userConfirmation(\'No\')" class="btn btn-default" data-dismiss="modal">No</button> <button type="button" ng-click="userConfirmation(\'Yes\')" class="btn btn-primary" data-dismiss="modal">Yes</button> </div></script></div>'),e.put("app/main/edit.html",'<div class="container-fluid"><div ng-include="\'app/components/navbar/navbar.html\'"></div><div class="col-md-12" style="margin-top:20px"><a ui-sref="requests">Back</a></div>You can check your request details.</div>'),e.put("app/main/login.html",'<div id="login-form" class="panel panel-default centered login-form"><div class="panel-heading"><h4>Please Login</h4></div><form class="form" name="loginForm" role="form" ng-controller="LoginController" style="padding: 20px;" autocomplete="off" novalidate="" clear-input="" auto-hide="true"><div style="color:red;margin-bottom:20px;">{{loginstatus}}</div><div class="form-group" ng-class="{\'has-error\': showValidation && loginForm.name.$invalid}"><input class="form-control" type="text" placeholder="User Name" id="userName" ng-model="userName" name="name" autofocus="" required="true"> <span class="error-message" ng-show="showValidation && loginForm.name.$error.required">User name is required</span></div><div class="form-group" ng-class="{\'has-error\': showValidation && loginForm.password.$invalid}"><input class="form-control" type="password" placeholder="Password" ng-model="password" name="password" required="true"> <span class="error-message" ng-show="showValidation && loginForm.password.$error.required">You must enter a password</span></div><div ng-show="message" class="alert alert-danger">{{ message }}</div><br><div class="well" ng-show="loginText"><div class="panel-body"><div ng-bind-html="loginText"></div></div></div><button class="btn btn-lg btn-primary btn-block" type="submit" ng-click="login()">Sign in</button></form></div>'),e.put("app/main/neighbours.html",'<div class="container"><div ng-include="\'app/components/navbar/navbar.html\'"></div><div ng-init="getCities();"><form class="form"><div class="row" style="margin-top:10px;"><div class="col-md-1"><label>Select City Name:</label></div><div class="col-md-2"><select ng-model="cityList.city" class="form-control" required="" ng-change="createNewNeighbor()"><option ng-repeat="cities in citiesList" value="{{cities.code}}">{{cities.name}}</option><option value="NONE">None</option></select></div><div class="col-md-6"></div></div></form></div><div class="row" style="margin-top:15px;" ng-show="onCity"><div class="col-md-8" style="height:500px;"><div id="map"></div></div><div class="col-md-4"><form name="Form2" class="form" ng-submit="createNeighbour()"><div class="form-group"><p style="color:red; text-align:center;">{{accountstatus}}</p></div><div class="form-group row"><div align="center"><span style="font-size: 23px; color: #4CAF50;">Fill here Neighbourhood Details</span></div></div><div class="form-group row"><div class="col-md-4"><label>Area Name:</label></div><div class="col-md-8"><input type="text" ng-model="neiForm.area" class="form-control" placeholder="enter area name" required=""></div></div><div class="form-group row"><div class="col-md-4"><label>Locality:</label></div><div class="col-md-8"><input type="text" ng-model="neiForm.locality" class="form-control" placeholder="locality name" required=""></div></div><div class="form-group row"><div class="col-md-4"><label>Sub Locality:</label></div><div class="col-md-8"><input type="text" ng-model="neiForm.sublocality" class="form-control" placeholder="sub locality name"></div></div><div class="form-group row"><div class="col-md-4"><label>City:</label></div><div class="col-md-8"><input type="text" ng-model="neiForm.city" class="form-control" placeholder="locality name" required=""></div></div><div class="form-group row"><div class="col-md-4"><label>District:</label></div><div class="col-md-8"><input type="text" ng-model="neiForm.district" class="form-control" placeholder="locality name" required=""></div></div><div class="form-group row"><div class="col-md-4"><label>State:</label></div><div class="col-md-8"><input type="text" ng-model="neiForm.state" class="form-control" placeholder="locality name" required=""></div></div><div class="form-group row"><div class="col-md-4"><label>Country:</label></div><div class="col-md-8"><input type="text" ng-model="neiForm.country" class="form-control" placeholder="locality name" required=""></div></div><div class="form-group row"><div ng-show="createErrorMessage" class="alert alert-danger col-md-8" style="float:right;">{{ createErrorMessage }}</div><div ng-show="createMessage" class="alert alert-success col-md-8" style="float:right;">{{ createMessage }}</div></div><div class="form-group row"><div class="col-md-8" style="float:right;"><button class="btn btn-lg btn-primary btn-block" type="submit" ng-disabled="neiForm.sub">Create Neighbour</button></div></div></form></div></div></div>'),e.put("app/main/password.html",'<div id="login-form" class="panel panel-default centered login-form" ng-init="passWordForm();"><div class="panel-heading"><h4>Change Password</h4></div><form class="form" name="loginForm" role="form" ng-controller="LoginController" style="padding: 20px;" autocomplete="off" novalidate="" clear-input="" auto-hide="true"><div style="color:red;margin-bottom:20px;">{{loginstatus}}</div><div class="form-group"><label>UserName :</label> <input class="form-control" type="text" placeholder="User Name" id="userName" ng-model="userName" autofocus="" required=""></div><div class="form-group"><label>Old Password :</label> <input class="form-control" type="password" placeholder="Password" ng-model="oldpassword" required=""></div><div class="form-group"><label>New Password :</label> <input class="form-control" type="password" placeholder="Password" ng-model="newpassword" required=""></div><div ng-show="message" class="alert alert-success">{{ message }}<br><br><a ui-sref="login">Login Here</a></div><br><button class="btn btn-lg btn-primary btn-block" type="submit" ng-click="ChangePass()" ng-disabled="submitbtn">submit</button></form></div>'),e.put("app/main/requests.html",'<div class="container-fluid"><div ng-include="\'app/components/navbar/navbar.html\'"></div><div class="row" style="margin-top:10px;"><div class="col-md-1" style="text-align:right"><label>Status :</label></div><div class="col-md-2"><select ng-model="request.stats" class="form-control" required="" ng-change="getRecords()" style="vertical-align: middle;"><option value="ALL">All</option><option value="PENDING">Pending</option><option value="APPROVED">Approved</option><option value="REJECTED">Rejected</option></select></div></div><div ng-init="getRequests();"><div ng-show="message" class="alert alert-danger">{{ message }}</div><ul class="paginate"><div class="text-center"><dir-pagination-controls boundary-links="true" on-page-change="pageChangeHandler(newPageNumber)" template-url="dirPagination.tpl.html"></dir-pagination-controls></div></ul><div><table class="table table-bordered"><thead><th>Request Id</th><th>Area Name</th><th>Status</th></thead><tbody><tr dir-paginate="listzippr in stausReport| itemsPerPage:pagination.perPage" total-items="pagination.total" item="listzippr" current-page="pagination.currentPage"><td><a href="" ui-sref="edit" ng-click="GotoViewpage($index);">{{listzippr.neighbourhood_id}}</a></td><td>{{listzippr.name}}</td><td>{{listzippr.status}}</td></tr></tbody></table></div><ul class="paginate"><div class="text-center"><dir-pagination-controls boundary-links="true" on-page-change="pageChangeHandler(newPageNumber)" template-url="dirPagination.tpl.html"></dir-pagination-controls></div></ul></div></div>'),e.put("app/main/update.html",'<div class="container"><div ng-include="\'app/components/navbar/navbar.html\'"></div><div ng-init="getCities();"><form class="form"><div class="row" style="margin-top:10px;"><div class="col-md-1"><label>Select City Name:</label></div><div class="col-md-2"><select ng-model="cityList.city" class="form-control" required="" ng-change="onCityChange()"><option ng-repeat="cities in citiesList" value="{{cities.code}}">{{cities.name}}</option><option value="NONE">None</option></select></div><div class="col-md-6"><div ng-show="createErrorMessage" class="alert alert-danger col-md-8" style="float:right;">{{ createErrorMessage }}</div><div ng-show="createMessage" class="alert alert-success col-md-8" style="float:right;">{{ createMessage }}</div></div></div></form></div><div style="width:100%;height:600px;border:1px solid;" ng-show="onCity"><div id="map"></div></div><div></div><script type="text/ng-template" id="confirmUpdate.html"><div class="modal-header"> <h3 class="modal-title">Confirmation Required ?</h3> </div> <div class="modal-body"> <span>Are You Sure Want To Change polygon of <b>{{polygonName}}?</b> </div> <div class="modal-footer"> <button type="button" ng-click="userConfirmation(\'No\')" class="btn btn-default" data-dismiss="modal">No</button> <button type="button" ng-click="userConfirmation(\'Yes\')" class="btn btn-primary" data-dismiss="modal">Yes</button> </div></script></div>'),
e.put("app/components/navbar/navbar.html",'<div class="collapse navbar-collapse" style="background: #4CAF50; height:50px;" ng-controller="NavbarController"><div class="btn-group" ng-click="setTab(1)" ng-model="deleted"><a ui-sref="requests" class="btn-success btn" ng-class="{active:isSet(1)}"><strong>Requests</strong></a></div><div class="btn-group" ng-click="setTab(2)"><a ui-sref="neighbours" class="btn-success btn" ng-class="{active:isSet(2)}"><strong>New Neighbour</strong></a></div><div class="btn-group" ng-click="setTab(3)"><a ui-sref="update" class="btn-success btn" ng-class="{active:isSet(3)}"><strong>Update</strong></a></div><div class="btn-group" ng-click="setTab(4)"><a ui-sref="disable" class="btn-success btn" ng-class="{active:isSet(4)}"><strong>Disable</strong></a></div><div class="btn-group" ng-click="setTab(5)" ng-show="newUser"><a ui-sref="createUser" class="btn-success btn" ng-class="{active:isSet(5)}"><strong>Create User</strong></a></div><div class="btn-group navbar-right" dropdown="" keyboard-nav=""><button id="simple-btn-keyboard-nav" type="button" class="btn-success btn" dropdown-toggle=""><span><strong>{{loginMessage}}</strong></span>{{LoggedInUser}} <span class="caret"></span></button><ul class="dropdown-menu" role="menu" aria-labelledby="simple-btn-keyboard-nav"><li><a href="" ng-click="logout();">Logout</a></li><li><a ui-sref="password">Change Password</a></li></ul></div></div>')}]);